<?php

namespace EShop\Controller;


class ComBranchCapitalController extends BaseDataController {
    protected $filter_request = [
        'getRechargeList','recharge_examine','capitalAccountList','searchAccount',
        'getWithdrawalList','withdrawal_examine','capitalDetails','setAttachGroup'
    ];//可以获取数据的方法
    protected $repository;
    protected $branch_id;
    protected $request_default = ['searchAccount'=>['name','']];
    protected $_model = [
        'recharge' => 'ComRecharge',
        'withdrawal' => 'ComWithdrawals'
    ];
    protected $filter_location_post = [
        'getRechargeList','getWithdrawalList','setAttachGroup'
    ];
    protected $options = [];
    protected $open = true;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->validateFilterLocationModule();
        $this->handlerDefaultViewData();
    }
    public function rechargeAction()
    {
        $this->assign('title','充值列表');
        $this->display();
    }
    public function searchAccountAction()
    {
        if (IS_GET) {
            $various = I('get.various') ?? 'r';
            $this->assign('various',$various);
            $this->assign('title','公司选择');
            $this->display();
        } else {
            $condition_company = [];
            $condition_user = [];
            if (!empty($this->request->name)) {
                $where['name']  = array('like', '%'.$this->request->name.'%');
                $where['querykey']  = array('like', '%'.$this->request->name.'%');
                $where['_logic'] = 'or';
                $condition_company['_complex'] = $where;
                $condition_user['_complex'] = $where;
                $this->assign('name',$this->request->name);
            }
            $condition_user['branch_id'] = getBrowseBranchId();
            $condition_user['user_type']= array('neq',USER_TYPE_COMPANY_MANAGER);
            $condition_user['is_valid']=1;
            $condition_company['parent_id'] = getBrowseBranchId();
            $condition_company['type']=1;
            $condition_company['is_valid']=1;
            if ($this->request->various == 'w' || $this->request->various == 'r') {
                $aj = D('ESAdmin/ComAccountJurisdiction') ;
                $various = $this->request->various == 'w' ? CAJ_BRANCH_WITHDRAWAL : CAJ_BRANCH_RECHARGE;
                $aj-> setObjectVarious([$various]);
                $aj-> setOptions('jurisdiction','leader');
                $aj-> getLoginUserJurisdiction();
                $jurisdiction = $aj->getStore('jurisdiction');
                if ($jurisdiction === false) {
                    $condition_user['id'] = 0;
                    $condition_company['id'] = 0;
                } elseif(is_array($jurisdiction)) {
                    if (!empty($jurisdiction['users'][$various]) || !empty($jurisdiction['companys'][$various])){
                        if (empty($jurisdiction['users'][$various])) {
                            $condition_user['id'] = 0;
                        } else {
                            $condition_user['id']  = array('in',$jurisdiction['users'][$various]);
                        }
                        if (empty($jurisdiction['companys'][$various])) {
                            $condition_company['id'] = 0;
                        } else {
                            $condition_company['id']  = array('in',$jurisdiction['companys'][$various]);
                        }
                    }
                }
            }
            $company_sql = M('SysBranch')
                ->where($condition_company)
                ->field("CONCAT('c:',id) as value,name as text,if(name != '',update_time + 1000000000,update_time) as time,querykey,'1' as genre")->fetchSql(true)->select();
            $user_sql = M('SysUser')
                ->where($condition_user)
                ->field("CONCAT('u:',id) as value,name as text,if(name != '',reg_time + 1000000000,reg_time) as time,querykey,'2' as genre")->fetchSql(true)->select();
            $sql = '( '.$company_sql . ') union ('.$user_sql.') order by genre asc, time desc';
            $list = M()->query($sql);
            $this->ajaxReturn($list);
        }

    }
    public function recharge_examineAction()
    {
        if (IS_GET) {
            if ($this->request->id > 0) {
                $recharge  = $this->handlerModelPoint('getSingleRechargeData');
                if ($recharge['pay_status'] != 0) {
                    $this->error('该条充值记录已审核');
                }
                if ($recharge){
                    $recharge['capital_account'] = $recharge['money_type'] == FIN_CIZ_RECHARGE ? $recharge['company_name'] : $recharge['user_name'];
                    $recharge['capital_account_id'] = $recharge['money_type'] == FIN_CIZ_RECHARGE ? 'c:'.$recharge['company_id'] : 'u:'.$recharge['user_id'];
                    $this->assign('model',$recharge);
                    $this->assign('is_leader',$this->getUserHasAccountLeader($recharge,'recharge'));
                }
            } else {
                $model['attach_group'] = genUniqidKey();
                $this->assign('model',$model);
            }
            $this->assign('pay_time',date('Y年m月d日',time()));
            $_filter['status'] = 1;
            $_filter['branch_id'] = getBrowseBranchId();
            $receivables_account = D('WrkReceivablesAccount')->alias("a")->field("a.id as value,a.name as text")->where($_filter)->select();
            $this->assign('receivables_account',json_encode($receivables_account ?? []));
            $this->display();
        } else {
            if ($this->request->examine_type && in_array($this->request->examine_type,['refuse','adopt'])){
                if ($this->request->examine_type == 'adopt') {
                    if ($this->request->id > 0) {
                        $payment = $this->handlerModelPoint('getSingleRechargeData');
                        if (!$this->getUserHasAccountLeader($payment,'recharge')) {
                            $this->ajaxReturn(buildMessage("无此功能操作权限！", 1));
                        }
                        if ($payment['pay_status'] != 0 && !empty($payment['audit_time'])) {
                            $this->ajaxReturn(buildMessage( "已经审核过，不能再次审核！",1));
                            die;
                        }
                        if ($payment["source"] != FIN_PAY_OFFLINE){ //线下转账
                            $this->ajaxReturn(buildMessage( "非线下转账充值，无需审核!",1));
                            die;
                        }
                        if (empty(I('post.origin'))){
                            $this->ajaxReturn(buildMessage( "请选择收款账户!",1));
                            die;
                        }
                        $err_msg = $this->handlerModelPoint('handlerRechargeAdopt',$payment);
                        if ($err_msg['code'] == 0) {
                            $this->rechargeSendNotice();
                        }
                        $this->ajaxReturn($err_msg);
                    } else {
                        if (!isset($_POST['account'])){
                            $this->ajaxReturn(array('code' =>1 ,'message' =>"系统出错，请联系管理员"));
                        } else {
                            $capital_account_id = explode(':',$this->request->capital_account_id);
                            if ($capital_account_id[0] == 'c') {
                                $payment['company_id'] = $capital_account_id[1];
                                $payment['money_type'] = FIN_CIZ_RECHARGE;
                            } else {
                                $payment['user_id'] = $capital_account_id[1];
                                $payment['money_type'] = FIN_UIZ_RECHARGE;
                            }
                            if (!$this->getUserHasAccountLeader($payment,'recharge')) {
                                $this->ajaxReturn(buildMessage("无此功能操作权限！", 1));
                            }
                            $err_msg = $this->handlerModelPoint('handlerRechargeAdopt',null);
                            if ($err_msg['code'] == 0) {
                                $this->rechargeSendNotice();
                            }
                            $this->ajaxReturn($err_msg);
                        }
                    }
                } else if($this->request->examine_type == 'refuse'){
                    $payment = $this->handlerModelPoint('getSingleRechargeData');
                    if (!$this->getUserHasAccountLeader($payment,'recharge')) {
                        $this->ajaxReturn(buildMessage("无此功能操作权限！", 1));
                    }
                    if ($payment['pay_status'] != 0 && !empty($payment['audit_time'])) {
                        $this->ajaxReturn(buildMessage( "已经审核过，不能再次审核！",1));
                        die;
                    }
                    if ($payment["source"] != FIN_PAY_OFFLINE){ //线下转账
                        $this->ajaxReturn(buildMessage( "非线下转账充值，无需审核!",1));
                        die;
                    }
                    $recharge["pay_status"] = 2;
                    $recharge["attach_group"] = $this->request->attach_group;
                    $recharge["audit_time"] = time();
                    $this->options = $recharge;
                    $success =  $this->handlerModelPoint('handlerSingleRechargeSave');
                    if ($success){
                        $condition["a.id"] = $this->request->id;
                        $record = $this->handlerModelPoint('getSingleRechargeData');
                        $record['capital_account'] = $record['money_type'] == FIN_CIZ_RECHARGE ? $record['company_name'] : $record['user_name'];
                        $record['actual_money'] = $record['pay_status'] == 1 ? sprintf("%.2f", $record['account'] - $record['third_fee']):'';
                        $record['object_type'] = $record['money_type'] == FIN_CIZ_RECHARGE ? 'c':'u';
                        $this->rechargeSendNotice();
                        $this->ajaxReturn(array("code"=>0, "message"=>"审核成功！","row"=>$record));
                    }else{
                        $this->ajaxReturn(array("code"=>1, "message"=>"审核失败"));
                    }
                }
            } else {
                $this->ajaxReturn(buildMessage('数据错误!',1));
            }
        }
    }
    //获取充值列表
    public function getRechargeListAction()
    {
        if($this->request->status == 0 && $this->request->status != ""){
            $condition['recharge.source'] = array("neq",FIN_PAY_WEIXIN);
        }
        $condition['recharge.pay_status'] = $this->request->status;
        if($this->request->status == 1){
            unset($condition['recharge.pay_status']);
            $condition['_string'] = "( recharge.pay_status = 1 or ( recharge.source = 0 and recharge.pay_status in (0,1)) )";
        }
        $condition['recharge.money_type'] = array('in',[FIN_CIZ_RECHARGE,FIN_UIZ_RECHARGE]);
        $condition['recharge.branch_id'] = getBrowseBranchId();
        //进行权限控制
        $aj = D('ComAccountJurisdiction');
        $aj->setObjectVarious([CAJ_BRANCH_RECHARGE]);
        $aj->setOptions('jurisdiction','visiblers');
        $aj->getLoginStaffJurisdiction();
        $jurisdiction = $aj->getStore('jurisdiction');
        if ($jurisdiction === false) {
            $condition['recharge.id'] = 0;
        } else if ($jurisdiction != 'all' && is_array($jurisdiction)) {
            if (!empty($jurisdiction['companys'][CAJ_BRANCH_RECHARGE]) && !empty($jurisdiction['users'][CAJ_BRANCH_RECHARGE])) {
                $tmp = "";
                if(!empty($condition['_string'])){
                    $condition['_string'] .= " and (";
                    $tmp .= " )";
                }else{
                    $condition['_string'] = "";
                }
                $condition['_string'] .= '( recharge.money_type='.FIN_CIZ_RECHARGE.' and recharge.company_id in ('.implode(',',$jurisdiction['companys'][CAJ_BRANCH_RECHARGE]).') )';
                $condition['_string'] .= ' or (recharge.money_type='.FIN_UIZ_RECHARGE.' and recharge.user_id in ('.implode(',',$jurisdiction['users'][CAJ_BRANCH_RECHARGE]).') )';
                $condition['_string'] .= $tmp;
            } else {
                if (!empty($jurisdiction['companys'][CAJ_BRANCH_RECHARGE])) {
                    $where['recharge.money_type']  = array('eq',FIN_CIZ_RECHARGE);
                    $where['recharge.company_id']  = array('in',$jurisdiction['companys'][CAJ_BRANCH_RECHARGE]);
                    $where['_logic'] = 'and';
                } else {
                    $condition['recharge.money_type'] = array(array('neq',FIN_CIZ_RECHARGE),array('in',[FIN_CIZ_RECHARGE,FIN_UIZ_RECHARGE]),'and');
                }
                if (!empty($jurisdiction['users'][CAJ_BRANCH_RECHARGE])) {
                    $where['recharge.money_type']  = array('eq',FIN_UIZ_RECHARGE);
                    $where['recharge.user_id']  = array('in',$jurisdiction['users'][CAJ_BRANCH_RECHARGE]);
                    $where['_logic'] = 'and';
                } else {
                    $condition['recharge.money_type'] = array(array('neq',FIN_UIZ_RECHARGE),array('in',[FIN_CIZ_RECHARGE,FIN_UIZ_RECHARGE]),'and');
                }
                if ($where) {
                    $condition['_complex'] = $where;
                }
            }
        }

        $result = M('ComRecharge')
                        ->alias('recharge')
                        ->field('recharge.account as money,recharge.pay_status as status,if(recharge.pay_status = 1,recharge.pay_time,recharge.ctime) as created_time,recharge.id,if(recharge.money_type = '.FIN_CIZ_RECHARGE.',branch.name,user.name) as name,if(recharge.money_type = '.FIN_CIZ_RECHARGE.',CONCAT("c:",branch.id),CONCAT("u:",user.id)) as account_id,recharge.attach_group,recharge.source')
                        ->join('sys_branch as branch on branch.id = recharge.company_id','left')
                        ->join('sys_user as user on user.id = recharge.user_id','left')
                        ->where($condition)
                        ->order('created_time desc')
                        ->page($this->request->page,20)
                        ->select();
        foreach ($result as $key=>$value) {
            $result[$key]['created_at'] = date('Y-m-d H:i:s',$value['created_time']);
            $result[$key]['attach_group'] = !empty($value['attach_group']) ? $value['attach_group'] : '';
        }
        $this->ajaxReturn(buildMessage($result));
    }
    public function withdrawalAction()
    {
        $this->assign('title','提现列表');
        $this->display();
    }
    //获取提现列表
    public function getWithdrawalListAction()
    {
        $condition['withdrawal.status'] = $this->request->status;
        $condition['withdrawal.withdrawal_type'] = array('in',[FIN_CIZ_WITHDRAW,FIN_UIZ_WITHDRAW]);
        $condition['withdrawal.branch_id'] = getBrowseBranchId();
        //进行权限控制
        $aj = D('ComAccountJurisdiction');
        $aj->setObjectVarious([CAJ_BRANCH_WITHDRAWAL]);
        $aj->setOptions('jurisdiction','visiblers');
        $aj->getLoginStaffJurisdiction();
        $jurisdiction = $aj->getStore('jurisdiction');
        if ($jurisdiction === false) {
            $condition['withdrawal.id'] = 0;
        } else if ($jurisdiction != 'all' && is_array($jurisdiction)) {
            if (!empty($jurisdiction['companys'][CAJ_BRANCH_WITHDRAWAL]) && !empty($jurisdiction['users'][CAJ_BRANCH_WITHDRAWAL])) {
                $condition['_string'] = '( withdrawal.withdrawal_type='.FIN_CIZ_WITHDRAW.' and withdrawal.company_id in ('.implode(',',$jurisdiction['companys'][CAJ_BRANCH_WITHDRAWAL]).') )';
                $condition['_string'] .= ' or (withdrawal.withdrawal_type='.FIN_UIZ_WITHDRAW.' and withdrawal.user_id in ('.implode(',',$jurisdiction['users'][CAJ_BRANCH_WITHDRAWAL]).') )';
            } else {
                if (!empty($jurisdiction['companys'][CAJ_BRANCH_WITHDRAWAL])) {
                    $where['withdrawal.withdrawal_type']  = array('eq',FIN_CIZ_WITHDRAW);
                    $where['withdrawal.company_id']  = array('in',$jurisdiction['companys'][CAJ_BRANCH_WITHDRAWAL]);
                    $where['_logic'] = 'and';
                } else {
                    $condition['withdrawal.withdrawal_type'] = array(array('neq',FIN_CIZ_WITHDRAW),array('in',[FIN_CIZ_WITHDRAW,FIN_UIZ_WITHDRAW]),'and');
                }
                if (!empty($jurisdiction['users'][CAJ_BRANCH_WITHDRAWAL])) {
                    $where['withdrawal.withdrawal_type']  = array('eq',FIN_UIZ_WITHDRAW);
                    $where['withdrawal.user_id']  = array('in',$jurisdiction['users'][CAJ_BRANCH_WITHDRAWAL]);
                    $where['_logic'] = 'and';
                } else {
                    $condition['withdrawal.withdrawal_type'] = array(array('neq',FIN_UIZ_WITHDRAW),array('in',[FIN_CIZ_WITHDRAW,FIN_UIZ_WITHDRAW]),'and');
                }
                if ($where) {
                    $condition['_complex'] = $where;
                }
            }
        }
        $result = M('ComWithdrawals')
            ->alias('withdrawal')
            ->field('withdrawal.money,withdrawal.status,if(withdrawal.status = 1,withdrawal.handle_time,withdrawal.create_time) as created_time,withdrawal.id,if(withdrawal.withdrawal_type = '.FIN_CIZ_WITHDRAW.',branch.name,user.name) as name,if(withdrawal.withdrawal_type = '.FIN_CIZ_WITHDRAW.',CONCAT("c:",branch.id),CONCAT("u:",user.id)) as account_id,withdrawal.attach_group')
            ->join('sys_branch as branch on branch.id = withdrawal.company_id','left')
            ->join('sys_user as user on user.id = withdrawal.user_id','left')
            ->where($condition)
            ->order('created_time desc')
            ->page($this->request->page,20)
            ->select();
        foreach ($result as $key=>$value) {
            $result[$key]['created_at'] = date('Y-m-d H:i:s',$value['created_time']);
            $result[$key]['attach_group'] = !empty($value['attach_group']) ? $value['attach_group'] : '';
        }
        $this->ajaxReturn(buildMessage($result));
    }
    public function withdrawal_examineAction()
    {
        if (IS_GET) {
            if ($this->request->id > 0) {
                $withdrawal  = $this->handlerModelPoint('getSingleWithdrawalData');
                if ($withdrawal['status'] != 0) {
                    $this->error('该条提现记录已审核');
                }
                if ($withdrawal){
                    $withdrawal['capital_account'] = $withdrawal['money_type'] == FIN_CIZ_RECHARGE ? $withdrawal['company_name'] : $withdrawal['user_name'];
                    $withdrawal['capital_account_id'] = $withdrawal['money_type'] == FIN_CIZ_RECHARGE ? 'c:'.$withdrawal['company_id'] : 'u:'.$withdrawal['user_id'];
                    $withdrawal['bank_account'] = $withdrawal['bank_account'] ? '尾号'.substr($withdrawal['bank_account'],-4) : '';
                    $this->assign('model',$withdrawal);
                    $this->assign('is_leader',$this->getUserHasAccountLeader($withdrawal,'withdrawal'));
                }
                $this->assign('pay_time',date('Y年m月d日',time()));
                $_filter['status'] = 1;
                $_filter['branch_id'] = getBrowseBranchId();
                $receivables_account = D('WrkReceivablesAccount')->alias("a")->field("a.id as value,a.name as text")->where($_filter)->select();
                $this->assign('receivables_account',json_encode($receivables_account ?? []));
                $this->display();
            }
        } else {
            if ($this->request->examine_type && in_array($this->request->examine_type,['refuse','adopt'])){
                if ($this->request->examine_type == 'adopt') {
                    if ($this->request->id > 0) {
                        $payment = $this->handlerModelPoint('getSingleWithdrawalData');
                        if (!$this->getUserHasAccountLeader($payment,'withdrawal')) {
                            $this->ajaxReturn(buildMessage("无此功能操作权限！", 1));
                        }
                        if ($payment['status'] != 0 && !empty($payment['handle_time'])) {
                            $this->ajaxReturn(buildMessage( "已经审核过，不能再次审核！",1));
                            die;
                        }
                        $err_msg = $this->handlerModelPoint('handlerWithdrawalAdopt',$payment);
                        if ($err_msg['code'] == 0) {
                            $this->withdrawalSendNotice();
                        }
                        $this->ajaxReturn($err_msg);
                    } else {
                        $this->ajaxReturn(buildMessage( "参数错误！",1));
                    }
                } else if($this->request->examine_type == 'refuse') {
                    if ($this->request->id > 0) {
                        $payment = $this->handlerModelPoint('getSingleWithdrawalData');
                        if (!$this->getUserHasAccountLeader($payment,'withdrawal')) {
                            $this->ajaxReturn(buildMessage("无此功能操作权限！", 1));
                        }
                        if ($payment['status'] != 0 && !empty($payment['handle_time'])) {
                            $this->ajaxReturn(buildMessage( "已经审核过，不能再次审核！",1));
                            die;
                        }
                        $withdrawal["status"] = 2;
                        $withdrawal["handle_time"] = time();
                        $withdrawal["attach_group"] = I('post.attach_group');
                        $withdrawal['operate_id'] = session('user_id');
                        $this->options = $withdrawal;
                        $success =  $this->handlerModelPoint('handlerSingleWithdrawalSave');
                        if ($success) {
                            if ($payment['withdrawal_type'] == FIN_CIZ_WITHDRAW){
                                $members = M("SysBranch");
                                $account = $members->field('money_auditing')->where('id = '.$payment['company_id'])->find();
                                $balance_money  = sprintf("%.2f", $account['money_auditing'] - $payment['money']);
                                $members->where("id=".$payment['company_id'])->setField("money_auditing", $balance_money);
                            }elseif ($payment['withdrawal_type'] == FIN_UIZ_WITHDRAW){
                                $members = M("SysUser");
                                $account = $members->field('user_money_auditing')->where('id = '.$payment['user_id'])->find();
                                $balance_money  = sprintf("%.2f", $account['user_money_auditing'] - $payment['money']);
                                $members->where("id=".$payment['user_id'])->setField("user_money_auditing", $balance_money);
                            }
                            if (true){
                                $record = $this->handlerModelPoint('getSingleWithdrawalData');
                                $record['capital_account'] = $record['money_type'] == FIN_CIZ_WITHDRAW ? $record['company_name'] : $record['user_name'];
                                $record['actual_money'] = $record['status'] == 1 ? sprintf("%.2f", $record['money'] - $record['fee']):'';
                                $record['object_type'] = $record['money_type'] == FIN_CIZ_WITHDRAW ? 'c':'u';
                                $this->withdrawalSendNotice();
                                $this->ajaxReturn(array("code"=>0, "message"=>"审核成功！","row"=>$record));
                            }else{
                                $this->ajaxReturn(array("code"=>1, "message"=>"审核失败"));
                            }
                        }
                    }  else {
                        $this->ajaxReturn(buildMessage( "参数错误！",1));
                    }
                }
            } else {
                $this->ajaxReturn(buildMessage('数据错误!',1));
            }
        }
    }
    public  function capitalDetailsAction()
    {
        if (IS_GET) {
            if ($this->request->id && is_string($this->request->id) && strpos($this->request->id,':') == 1) {
                $capital_idstr = explode(':',$this->request->id);
                if (in_array($capital_idstr[0],['c','u'])) {
                    $model = [];
                    if ($capital_idstr[0] == 'c') {
                        $company = D('SysBranch')->where(array('id' =>  $capital_idstr[1]))->find();
                        $model['account_name'] = $company['name'];
                        $model['balance_money'] = sprintf("%.2f", floatval($company['money']) - floatval($company['money_auditing'])); //显示扣除掉审核中余额
                    } else {
                        $user = D('SysUser')->where(array('id' => $capital_idstr[1]))->find();
                        $model['account_name'] = $user['name'];
                        $model['balance_money'] = sprintf("%.2f", floatval($user['user_money']) - floatval($user['user_money_auditing'])); //显示扣除掉审核中余额
                    }
                    $model['capital'] = $capital_idstr[0];
                    $model['id'] = $capital_idstr[1];
                    $this->assign('model',$model);
                    $this->display();
                } else {
                    $this->handlerDontLocation();
                }
            } else {
                $this->handlerDontLocation();
            }
        } else {
            if (I('post.targetType') == 'c') {
                $finance = D("ComFinance")->getCompanyMoneyDetail($this->request->targetId,$this->request->page,$this->request->search);
                foreach($finance as $key => $value) {
                    $revealParagrap = formatRevealParagraphTime($value['pay_time']);
                    $finance[$key]['year'] =   $revealParagrap['year'];
                    $finance[$key]['day'] =   $revealParagrap['day'];
                    $finance[$key]['time'] =   $revealParagrap['time'];
                    $finance[$key]['icon'] =   IMG_URL."tool/".$value['icon'].'-icon.png';
                }
                $this->ajaxReturn($finance);
            } else {
                $finance = D("ComFinance")->getUserMoneyDetail($this->request->targetId,$this->request->page,$this->request->search);
                foreach($finance as $key => $value) {
                    $revealParagrap = formatRevealParagraphTime($value['pay_time']);
                    $finance[$key]['year'] =   $revealParagrap['year'];
                    $finance[$key]['day'] =   $revealParagrap['day'];
                    $finance[$key]['time'] =   $revealParagrap['time'];
                    $finance[$key]['icon'] =   IMG_URL."tool/".$value['icon'].'-icon.png';
                }
                $this->ajaxReturn($finance);
            }
        }
    }
    public function setAttachGroupAction()
    {
        if (IS_POST) {
            $operation = I('post.operation');
            if ($operation == 'withdrawal') {
                $table = 'ComWithdrawals';
            } else {
                $table = 'ComRecharge';
            }
            $condition['id'] = I('post.id');
            $save['attach_group'] = I('post.attach_group');
            D($table)->where($condition)->data($save)->save();
        }
    }




    //model 访问
    protected function getSingleRechargeDataAppoint()
    {
        return D($this->_model['recharge'])->getSingleRechargeData($this->request->id,$this->options);
    }
    protected function getSingleWithdrawalDataAppoint()
    {
        return D($this->_model['withdrawal'])->getSingleWithdrawalData($this->request->id,$this->options);
    }
    protected function handlerRechargeAdoptAppoint($payment)
    {
        return D('ESAdmin/'.$this->_model['recharge'])->rechargeAdopt($payment,session('user_id'));
    }
    protected function handlerSingleRechargeSaveAppoint()
    {
        return D($this->_model['recharge'])->handlerSingleRechargeSave($this->request->id,$this->options);
    }
    protected function handlerSingleWithdrawalSaveAppoint()
    {
        return D($this->_model['withdrawal'])->handlerSingleWithdrawalSave($this->request->id,$this->options);
    }
    protected function handlerWithdrawalAdoptAppoint($payment)
    {
        return D('ESAdmin/'.$this->_model['withdrawal'])->withdrawalAdopt($payment,session('user_id'));
    }




    //拒接访问的条件
    protected function validateFilterLocationModule(){
        return (session('user_type') != USER_TYPE_COMPANY_MANAGER || empty(session('user_type'))) ? true : false;
    }
    /*
     * BranchTemplate 模块 默认数据
     */
    protected function handlerDefaultViewData()
    {
        if(IS_GET) {
            $this->title = '资金管理';
        }
    }
    protected function handlerRequestPoint($action = ACTION_NAME)
    {
        return $this->handlerPointData('handler%point%Revise',func_get_args());
    }
    protected function handlerModelPoint($action = ACTION_NAME)
    {
        return $this->handlerPointData('%point%Appoint',func_get_args());
    }
    protected function handlerPointData($point,$data){
        $action = $data[0] ?? ACTION_NAME;
        unset($data[0]);
//        return $this->{str_replace('%point%',ucfirst(stringToHump($action)),$point)}(...$data);
        return call_user_func_array(array($this,str_replace('%point%',ucfirst(stringToHump($action)),$point)),$data);
    }
    protected function getUserHasAccountLeader($data,$type)
    {
        if ($type == 'recharge') {
            $object_id = $data['money_type'] == FIN_CIZ_RECHARGE ? $data['company_id'] : $data['user_id'];
            $jurisdiction =  D('ESAdmin/ComAccountJurisdiction');
            $jurisdiction->setObjectType($data['money_type']);
            $jurisdiction->setObjectId($object_id);
            $jurisdiction->setObjectVarious([CAJ_BRANCH_RECHARGE]);
            $jurisdiction->handlerHasAccountLeader();
            return $jurisdiction->getStore('has_leader');
        } else {
            $object_id = $data['withdrawal_type'] == FIN_CIZ_WITHDRAW ? $data['company_id'] : $data['user_id'];
            $object_type = $data['withdrawal_type'] == FIN_CIZ_WITHDRAW ? 1 : 2;
            $jurisdiction =  D('ESAdmin/ComAccountJurisdiction');
            $jurisdiction->setObjectType($object_type);
            $jurisdiction->setObjectId($object_id);
            $jurisdiction->setObjectVarious([CAJ_BRANCH_WITHDRAWAL]);
            $jurisdiction->handlerHasAccountLeader();
            return $jurisdiction->getStore('has_leader');
        }
    }
    protected function withdrawalSendNotice()
    {
        $currency_tip = '';
        $this->options = [];
        $withdrawal = $this->handlerModelPoint('getSingleWithdrawalData');
        $withdrawal['account'] = sprintf('%.2f',$withdrawal['money']);
        $withdrawal['pay_time_view'] = date('Y-m-d H:i:s',$withdrawal['handle_time']);
        //获取可见人
        if ($withdrawal['withdrawal_type'] == FIN_CIZ_WITHDRAW) {
            $account = M('SysBranch') ->field('money,money_auditing')-> where(['id' => $withdrawal['company_id']]) ->find();
            $withdrawal['account_balance'] = sprintf('%.2f',$account['money'] - $account['money_auditing']);
            $jurisdiction =  D('ESAdmin/ComAccountJurisdiction');
            $jurisdiction->setObjectId($withdrawal['company_id']);
            $jurisdiction->setObjectType(1);
            $jurisdiction->setObjectVarious([CAJ_BRANCH_CUSTOMER_CAPITAL]);
            $jurisdiction->getAccountNoticeSendUsers('user');
            $branch_visiblers = $withdrawal;
            $jurisdiction->setObjectVarious([CAJ_BRANCH_WITHDRAWAL]);
            $jurisdiction->getAccountNoticeSendUsers('branch',false);
            $branch_visiblers['openid'] = $jurisdiction->getStore('branch_visiblers');
            if(!$branch_visiblers['openid']){
                $branch_visiblers['openid'] = D("ESAdmin/ComRecharge")->getCapitalLeaderOpenid("ComWithdrawal");
            }
            //$branch_visiblers['account_balance'] = D("EShop/ComFinance")->getWxAccountMoney($withdrawal['receivable_id']);//获取收款账户的余额
            //$branch_visiblers['url'] = '/ComBranchCapital/capitalDetails/id/c:'.$withdrawal['company_id'].'.html';
            $branch_visiblers['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/ComBranchCapital/capitalDetails/id/c:'.$withdrawal['company_id'].'.html';
            $withdrawal['openid'] = $jurisdiction->getStore('user_visiblers');
            //$withdrawal['url'] = '/money/company/id/'.$withdrawal['company_id'].'.html';
            $withdrawal['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/money/company/id/'.$withdrawal['company_id'].'.html';
        } else {
            $account = M('SysUser') ->field('user_money_auditing,user_money,openid')-> where(['id' => $withdrawal['user_id']]) ->find();
            $withdrawal['account_balance'] = sprintf('%.2f',$account['user_money'] - $account['user_money_auditing']);
            $branch_visiblers = $withdrawal;
            //$branch_visiblers['url'] = '/ComBranchCapital/capitalDetails/id/u:'.$withdrawal['user_id'].'.html';;
            $branch_visiblers['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/ComBranchCapital/capitalDetails/id/u:'.$withdrawal['user_id'].'.html';;
            $jurisdiction =  D('ESAdmin/ComAccountJurisdiction');
            $jurisdiction->setObjectId($withdrawal['user_id']);
            $jurisdiction->setObjectType(2);
            $jurisdiction->setObjectVarious([CAJ_BRANCH_WITHDRAWAL]);
            $jurisdiction->getAccountNoticeSendUsers('branch',false);
            $branch_visiblers['openid'] = $jurisdiction->getStore('branch_visiblers');
            if(!$branch_visiblers['openid']){
                $branch_visiblers['openid'] = D("ESAdmin/ComRecharge")->getCapitalLeaderOpenid("ComWithdrawal");
            }
            //$branch_visiblers['account_balance'] = D("EShop/ComFinance")->getWxAccountMoney($withdrawal['receivable_id']);//获取收款账户的余额
            $withdrawal['openid'] = $account['openid'];
            //$withdrawal['url'] = '/money';
            $withdrawal['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/money';
        }
        switch ($withdrawal['status']) {
            case 1:
                $withdrawal['transaction_type'] = '账户提现(成功)';
                $currency_tip = TCT_WITHDRAWAL_COMPLETE_NOTICE;
                $branch_currency_tip = TCT_BRANCH_WITHDRAWAL_COMPLETE_NOTICE;
                $branch_visiblers['transaction_type'] = $withdrawal['transaction_type'];
                break;
            case 2:
                $withdrawal['transaction_type'] = '账户提现(失败)';
                $currency_tip = TCT_WITHDRAWAL_REFUSE_NOTICE;
                $branch_currency_tip = TCT_BRANCH_WITHDRAWAL_REFUSE_NOTICE;
                $branch_visiblers['transaction_type'] = $withdrawal['transaction_type'];
                $branch_visiblers['account_balance'] = '';
                break;
            default:
                break;
        }
        $this->sendWxTemplate($branch_currency_tip,$branch_visiblers);
        $this->sendWxTemplate($currency_tip,$withdrawal);
        //通知信息 id:id,notice:'refuse'
    }
    protected function rechargeSendNotice()
    {
        $currency_tip = '';
        $this->options = [];
        $recharge = $this->handlerModelPoint('getSingleRechargeData');
        $recharge['account'] = sprintf('%.2f',$recharge['account']);
        $recharge['pay_time_view'] = date('Y-m-d H:i:s',$recharge['audit_time']);
        //获取可见人
        if ($recharge['money_type'] == FIN_CIZ_RECHARGE) {
            $account = M('SysBranch') ->field('money,money_auditing')-> where(['id' => $recharge['company_id']]) ->find();
            $recharge['account_balance'] = sprintf('%.2f',$account['money'] - $account['money_auditing']);
            $branch_visiblers = $recharge;
            //$branch_visiblers['url'] = '/ComBranchCapital/capitalDetails/id/c:'.$recharge['company_id'].'.html';
            $branch_visiblers['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/ComBranchCapital/capitalDetails/id/c:'.$recharge['company_id'].'.html';
            $jurisdiction =  D('ESAdmin/ComAccountJurisdiction');
            $jurisdiction->setObjectId($recharge['company_id']);
            $jurisdiction->setObjectType(1);
            $jurisdiction->setObjectVarious([CAJ_BRANCH_CUSTOMER_CAPITAL]);
            $jurisdiction->getAccountNoticeSendUsers('user');
            $recharge['openid'] = $jurisdiction->getStore('user_visiblers');
            $jurisdiction->setObjectVarious([CAJ_BRANCH_RECHARGE]);
            $jurisdiction->getAccountNoticeSendUsers('branch',false);
            $branch_visiblers['openid'] = $jurisdiction->getStore('branch_visiblers');
            if(!$branch_visiblers['openid']){
                $branch_visiblers['openid'] = D("ESAdmin/ComRecharge")->getCapitalLeaderOpenid("ComRecharge");
            }
            //$branch_visiblers['account_balance'] = D("EShop/ComFinance")->getWxAccountMoney($recharge['receivable_id']);//获取收款账户的余额
            //$recharge['url'] = '/money/company/id/'.$recharge['company_id'].'.html';
            $recharge['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/money/company/id/'.$recharge['company_id'].'.html';
        } else {
            $account = M('SysUser') ->field('user_money_auditing,user_money,openid')-> where(['id' => $recharge['user_id']]) ->find();
            $recharge['account_balance'] = sprintf('%.2f',$account['user_money'] - $account['user_money_auditing']);
            $branch_visiblers = $recharge;
            //$branch_visiblers['url'] = '/ComBranchCapital/capitalDetails/id/u:'.$recharge['user_id'].'.html';;
            $branch_visiblers['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT).'/ComBranchCapital/capitalDetails/id/u:'.$recharge['user_id'].'.html';
            $jurisdiction =  D('ESAdmin/ComAccountJurisdiction');
            $jurisdiction->setObjectId($recharge['user_id']);
            $jurisdiction->setObjectType(2);
            $jurisdiction->setObjectVarious([CAJ_BRANCH_RECHARGE]);
            $jurisdiction->getAccountNoticeSendUsers('branch',false);
            $branch_visiblers['openid'] = $jurisdiction->getStore('branch_visiblers');
            if(!$branch_visiblers['openid']){
                $branch_visiblers['openid'] = D("ESAdmin/ComRecharge")->getCapitalLeaderOpenid("ComRecharge");
            }
            //$branch_visiblers['account_balance'] = D("EShop/ComFinance")->getWxAccountMoney($recharge['receivable_id']);//获取收款账户的余额
            $recharge['openid'] = $account['openid'];
            //$recharge['url'] = '/money';
            $recharge['url'] = str_replace('shop','shop'.getBrowseBranchId(),SHOP_ROOT)."/money";
        }
        switch ($recharge['pay_status']) {
            case 1:
                $recharge['transaction_type'] = '账户充值(成功)';
                $currency_tip = TCT_RECHARGE_COMPLETE_NOTICE;
                $branch_currency_tip = TCT_BRANCH_RECHARGE_COMPLETE_NOTICE;
                $branch_visiblers['transaction_type'] = '账户充值成功（线下付款）';
                break;
            case 2:
                $recharge['transaction_type'] = '账户充值(失败)';
                $currency_tip = TCT_RECHARGE_REFUSE_NOTICE;
                $branch_currency_tip = TCT_BRANCH_RECHARGE_REFUSE_NOTICE;
                $branch_visiblers['transaction_type'] = '账户充值失败（线下付款）';
                $branch_visiblers['account_balance'] = '';
                break;
            default:
                break;
        }
        $this->sendWxTemplate($branch_currency_tip,$branch_visiblers);
        $this->sendWxTemplate($currency_tip,$recharge);
        //通知信息 id:id,notice:'refuse'
    }
    protected function sendWxTemplate($currency_tip,$data)
    {
        $template_id = getWxTemplateIdByStandardId('OPENTM415437052');
        $message = array();
        $body = array();
        $message["template_id"] = $template_id;
        $message["url"] = $data['url'];
        $remark = '感谢使用, 如有问题请及时联系我们!';
        if(strstr($currency_tip,'branch')){
            //$message["url"] = '';
            $remark = '';
        }
        $body["first"]["value"]    = getWxTemplateCurrencyTip($currency_tip);
        $body["keyword1"]["value"] = $data["transaction_type"];
        $body["keyword2"]["value"] = $data["account"];
        $body["keyword3"]["value"] = $data["pay_time_view"];
        $body["keyword4"]["value"] = $data["account_balance"];
        $body["remark"]["value"] = $remark;
        $message["body"] = $body;
        if ($data['openid']) {
            if (is_array($data['openid'])) {
                foreach ($data['openid'] as $val){
                    $message["openid"] = $val;
                    send_wx_message($message);
                }
            } else {
                $message["openid"] = $data['openid'];
                send_wx_message($message);
            }
        }
    }
    //角色权限设置
    protected function handlerPermissionsProcessing()
    {
        parent::handlerPermissionsProcessing();
        switch (ACTION_NAME){
            case 'recharge':
            case 'getRechargeList':
                $this->_permission_name = 'ComRecharge';
                $this->_permission_action_name = 'list';
                break;
            case 'recharge_examine':
                $this->_permission_name = 'ComRecharge';
                if (IS_GET) {
                    if ($this->request->id > 0) {
                        $this->_permission_action_name = 'detail';
                    } else {
                        $this->_permission_action_name = 'add';
                    }
                } else {
                    if ($this->request->examine_type == 'adopt') {
                        $this->_permission_action_name = 'rechargeAdopt';
                    } else if($this->request->examine_type == 'refuse'){
                        $this->_permission_action_name = 'rechargeRefuse';
                    }
                }
                break;
            case 'withdrawal':
            case 'getWithdrawalList':
                $this->_permission_name = 'ComWithdrawals';
                $this->_permission_action_name = 'list';
                break;
            case 'withdrawal_examine':
                $this->_permission_name = 'ComWithdrawals';
                if (IS_GET) {
                    $this->_permission_action_name = 'detail';
                } else {
                    if ($this->request->examine_type == 'adopt') {
                        $this->_permission_action_name = 'withdrawalAdopt';
                    } else if($this->request->examine_type == 'refuse'){
                        $this->_permission_action_name = 'withdrawalRefuse';
                    }
                }
                break;
            case 'capitalDetails':
                $this->_permission_name = 'ComCapitalDetails';
                $this->_permission_action_name = 'list';
                break;
            default:
                break;
        }
    }
}
