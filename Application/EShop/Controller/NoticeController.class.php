<?php
/**
 * Created by PhpStorm.
 * User: Linn
 * Date: 2018/8/1
 * Time: 16:14
 *
 */

namespace EShop\Controller;

class NoticeController extends BaseDataController {
    const BLACK_CUTTER = '：';//会议时间：2018年9月30日 9：30
    protected $filter_request = [
        'index','notice_view','put_notice'
    ];//可以获取数据的方法
//    protected $filter_location = [];//可以直接访问的方法
    protected $repository;
    protected $branch_id;
    protected $request_default = ['index'=>['user',null]];
    protected $_model = 'WxBranchTemplate';
    protected $_buffer_time = 3 * 24 * 60 * 60;
    protected $filter_location_post = [
        'put_notice'
    ];
    protected $open = true;
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this->validateFilterLocationModule();
        $this->handlerDefaultViewData();
    }
	public function indexAction(){


		
	}
	public function notice_viewAction()
    {
        if (!empty(I('get.id')) || !empty(I('get.keys'))) {
            //获取资料
            if (!empty(I('get.id'))) {
                $condition['nru.id'] = I('get.id');
            } else{
                $condition['nru.keyt'] = I('get.keys');
            }
            $condition['nru.use'] = 1;
            $condition['nru.object_type'] = 1;
            $condition['nru.state'] = 1;
            $condition['branch.customer_leader_id'] = session('user_id');
            $data = M('wx_notice_relation_user')
                        ->alias('nru')
                        ->field('nru.*,ntl.title,ntl.name,ntl.licence_plate,ntl.message_type')
                        ->join('inner join wx_notice_template_library ntl on ntl.id = nru.notice_id')
                        ->join('inner join sys_branch branch on branch.id = nru.company_id')
                        ->where($condition)->find();

            if (!$data) {
                $this->handlerDontRequest();
            }
            if ($data['message_state'] == 0){
                M('wx_notice_relation_user')->where('id = '.$data['id'])->data(['see_time'=>time(),'message_state'=>1])->save();
            }
            $where['ntl.licence_plate'] = $data['licence_plate'];
            $where['nru.use'] = 1;
            $where['nru.object_type'] = 1;
            $where['nru.state'] = 1;
            $where['nru.id'] = array('neq',$data['id']);
            $where['branch.customer_leader_id'] = session('user_id');
            $notice_list = M('wx_notice_template_library')
                        ->alias('ntl')
                        ->field('nru.id,nru.company_name,nru.created_at,ntl.message_type,nru.message_state')
                        ->join('inner join wx_notice_relation_user nru on nru.notice_id = ntl.id')
                        ->join('inner join sys_branch branch on branch.id = nru.company_id')
                        ->where($where)
                        ->select();
            foreach($notice_list as $key=>$value){
                $notice_list[$key]['created_time'] = date('Y-m-d H:i:s',$value['created_at']);
                $state_data = $this->getNoticeState($value);
                $notice_list[$key]['view_state'] =$state_data['message'];
            }
            $this->assign('notice_list',$notice_list);
            $data['creater_time'] = date('Y-m-d H:i:s',$data['created_at']);
            $state_data2 = $this->getNoticeState($data,true);
            $data['view_state'] = $state_data2['message'];
            $data['the_state'] = $state_data2['code'];
            $content = $this->handlerNoticeContentRecords(['content'=> $data['content']]);
            $this->assign('content',json_encode($content?$content:[]));
            $this->assign('model',$data);
            $this->display();
        }
    }
    public function put_noticeAction()
    {
        if (IS_POST){
            if ($this->hasJurisdiction(I('post.id'))) {
                if (in_array(I('post.state'),[2,3])) {
                    $data['message_state'] = I('post.state');
                    $message = I('post.state') == 2 ? '确定' : '取消确认';
                    $where['id'] = I('post.id');
                    $result = M('wx_notice_relation_user') ->where($where)->data($data)->save();
                    if ($result){
                        $this->handlerResponse(['error'=>0,'message'=>$message.'成功']);
                    } else {
                        $this->handlerResponse(['error'=>1,'message'=>$message.'失败']);
                    }
                } else {
                    $this->handlerResponse(['error'=>1,'message'=>'数据错误!!']);
                }
            } else {
                $this->handlerResponse(['error'=>1,'message'=>'你没有访问的权利!!']);
            }
        }
    }
    protected function hasJurisdiction($id){
        $condition['nru.id'] = $id;
        $condition['nru.use'] = 1;
        $condition['nru.object_type'] = 1;
        $condition['nru.state'] = 1;
        $condition['branch.customer_leader_id'] = session('user_id');
        $data = M('wx_notice_relation_user')
                    ->alias('nru')
                    ->field('nru.*,ntl.title,ntl.name,ntl.licence_plate,ntl.message_type')
                    ->join('inner join wx_notice_template_library ntl on ntl.id = nru.notice_id')
                    ->join('inner join sys_branch branch on branch.id = nru.company_id')
                    ->where($condition)->count();
        return $data > 0 ? true : false;
    }
    protected function getNoticeState($data,$type = 0)
    {
        $message = '';
        $code = '';
        if ($data['message_type'] == 0) {
            $message =  $type ? '无须确认' : '无须确认';
            $code = 0;
        } else {
            switch ($data['message_state']){
                case 0:
                    $message = $type ? '待确认':'等待确认';
                    $code = 1;
                    break;
                case 1:
                    $message = $type ? '待确认':'等待确认';
                    $code = 1;
                    break;
                case 2:
                    $message = '已确认';
                    $code = 2;
                    break;
                case 3:
                    $message = '取消确认';
                    $code = 3;
                    break;
            }
        }
        return compact('message','code');
    }
    protected  function handlerNoticeContentRecords($data,$inc='content',$c = 2)
    {
        $result = array();
        $content_records = explode("\r\n", $data[$inc]);
        foreach ($content_records as $content_record){
            $items = explode(self::BLACK_CUTTER,$content_record);
            if (count($items) == $c){
                $result[$inc."_records"][] = array("field"=>$items[0], "value"=>$items[1]);
            }else{
                $result[$inc."_records"][] = array("key"=>$items[0],"field"=>$items[1], "value"=>$items[2]);
            }
        }
        $this->handlerContentDetailData($result[$inc."_records"]);
        return $result[$inc."_records"];
    }
    protected function handlerContentDetailData(&$content)
    {
        foreach ($content as $key => $value) {
            if ($key == 0) {
                $content[$key]['placeholder'] = '请输入消息提示';
                $content[$key]['view'] = '消息提示';
            } else if (trim($value['key']) != '') {
                $content[$key]['placeholder'] = '请输入'.$value['key'];
                $content[$key]['view'] = $value['key'];
            } else {
                $content[$key]['placeholder'] = '请输入消息备注';
                $content[$key]['view'] = '消息备注';
            }
        }
//        var_dump($content);die;
    }
    /*
     * BranchTemplate 模块 默认数据
     */
    protected function handlerDefaultViewData()
    {
        if(IS_GET) {
            $this->title = '服务详情';
        }
    }
    //拒接访问的条件
    protected function validateFilterLocationModule(){
        return (session('user_type') == USER_TYPE_COMPANY_MANAGER || empty(session('user_type'))) ? true : false;
    }
}