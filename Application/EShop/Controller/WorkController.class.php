<?php

namespace EShop\Controller;


class WorkController extends BaseDataController {
    protected $_TOOL_QUERY_MODEL = 'ToolQuery';
    protected $request;
    protected $storage_data;
    protected $filter_request = ['tool_query_list','getToolQueryData','updateToolTag','complateOperation'];//可以获取数据的方法
    protected $filter_location = [];//可以直接访问的方法
    public function _initialize()
    {

        parent::_initialize();
        // TODO: Change the autogenerated stub
        if(!$this->handlerFilterLocationModule()){
            $this->handlerDontLocation();
        }
        if($this->handlerFilterRequestModule()){
            $this->handlerRequest();
        }else{
            $this->handlerDontRequest();
        }

    }
    public function indexAction(){
        $this->title = '工作管理';
        //权限管理
//        var_dump($this->_permissionList['menus']['ComOrder']['menu_actions']['sell']);die;
        //判断是否有绑定公司
        if ( session('user_type') == USER_TYPE_COMPANY_MANAGER ){
            $condition['a.parent_id'] = $this->user_branch;
            $this->company_count = D('sysBranch') ->setDacFilter('a')->where($condition)->count();
            $this->isAdmin = 1;
        } else {
            $condition['user_branch.user_id'] = session('user_id');
//            $condition['user_branch.type'] = 1;
            $this->company =
                D('sysBranch')
                    ->setDacFilter('branch')
                    ->join('sys_user_branch as user_branch on user_branch.branch_id = branch.id')
                    ->where($condition)->count();
            $this->isAdmin = 0;
        }
        $this->display();
    }
    //工具使用列表
    public function tool_query_listAction()
    {
        $this->_getTooleQueryListAssign();
        $this->display();
    }
    //工具添加标签
    public function updateToolTagAction(){
       $result =  D($this->_TOOL_QUERY_MODEL)->saveTooleQueryTag($this->request);
       $response = $result ? ['error'=>0,'message'=>'标签提交成功!!'] : ['error'=>1,'message'=>'标签提交失败!!'];
       $this->handlerResponse($response);
    }
    //移至已处理
    public function complateOperationAction(){
        $result =  D($this->_TOOL_QUERY_MODEL)->complateOperation($this->request->id);
        $response = $result ? ['error'=>0,'message'=>'已处理成功!!'] : ['error'=>1,'message'=>'已处理失败!!'];
        $this->handlerResponse($response);
    }
    public function getToolQueryDataAction(){
        $result = D($this->_TOOL_QUERY_MODEL)->getToolQueryData($this->request);
        $this->handlerResponse($result,'JSON');
    }
    private function _getTooleQueryListAssign(){
        if($this->request->type != 2){
            $this->title = $this->request->type == 1 ? '商标查询记录' : '核名查询记录' ;
        }elseif($this->request->type == 2){
            $this->title = '免费咨询记录';
        }
        $this->type = $this->request->type;
        $this->tag = $this->getQueryTag('JSON');
    }
    protected function getQueryTag($format = 'array'){
        $array = [
            ['value'=>'0','text'=>'自定义'],
            ['value'=>'1','text'=>'没人接'],
            ['value'=>'2','text'=>'有意向'],
            ['value'=>'3','text'=>'下次再打']
        ];
        return strtolower($format) === 'json' ? json_encode($array) : $array;
    }
    // -----------------------------------Handler--------------------------------------------------
    //处理允许数据处理Module
    protected function handlerFilterRequestModule(){
        return in_array(ACTION_NAME,$this->filter_request) ? true : false;
    }
    //处理禁止获取数据处理
    protected function handlerDontRequest(){
        if(I('param.')){
            if(IS_GET){
                $this->error('不能传输数据!!','/');
                die;
            }else{
                $this->handlerResponse(['error'=>1,'message'=>'该页面没有传输数据的权利!!']);
                die;
            }
        }
    }
    //处理禁止通行
    protected function handlerDontLocation(){
        if(I('param.')){
            if(IS_GET){
                $this->error('您没有访问的权限','/');
                die;
            }else{
                $this->handlerResponse(['error'=>1,'message'=>'您没有访问的权限']);
                die;
            }
        }
    }
    //处理响应
    protected function handlerResponse($data,$type = 'json'){
        $this->ajaxReturn($data,$type);
    }
    //获取数据
    protected function handlerRequest(){
        if(I('param.')){
            $this->request = (object) I('param.');
        }else{
            $this->error('找不到数据','/');
        }
    }
    //访问权力
    protected function handlerFilterLocationModule(){
        if(!in_array(ACTION_NAME,$this->filter_location)){
            if(session('user_type') != USER_TYPE_COMPANY_MANAGER || empty(session('user_type'))){
                return false;
            }
        }
        return true;
    }
    protected function handlerPermissionsProcessing()
    {
        parent::handlerPermissionsProcessing();
        if (ACTION_NAME == 'tool_query_list'){
            switch (I('param.type')){
                case 0:
                    $this->_permission_name = 'ToolNuclearName';
                    $this->_permission_action_name = 'list';
                    break;
                case 1:
                    $this->_permission_name = 'ToolTrademarks';
                    $this->_permission_action_name = 'list';
                    break;
                case 2:
                    $this->_permission_name = 'Consultation';
                    $this->_permission_action_name = 'list';
                    break;
            }
        }
    }
}
