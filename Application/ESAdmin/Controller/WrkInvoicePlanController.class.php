<?php

namespace ESAdmin\Controller;

use Common\Lib\Controller\DataController;
use Common\Lib\Controller\ComplexDataController;

class  WrkInvoicePlanController extends ComplexDataController {
    public function _parsefilter(&$filter)
    {
        parent::_parsefilter($filter); // TODO: Change the autogenerated stub
        if(I("post.type") == 0 || I("post.type") == ""){
            $filter['a.type'] = 0;//无计划
        }
        $state = I("post.state");
        if($state != "" && $state == 0){
            $filter['a.state'] = $state;
        }elseif($state == 1){
            //已结束状态分为自动结束和手动结束
            $filter['a.state'] = array("in","1,2");
        }
        $filter['a.creater_id'] = array("neq","");//创建人不为空表示已经创建计划
        $start_time = I("post.start_time");
        $end_time = I("post.end_time");
        if($start_time && $end_time){
            $filter['ag.start_time'] = array(array("egt",strtotime($start_time)),array("elt",strtotime($end_time)));
        }
        //查看时间
        $date = I("post.date");
        if($date != "" && $date != 4){
            $tmp = D("WrkInvoicePlan")->getQdrDate($date);
            $filter['latest_invoice_time'] = array(array("egt",$tmp['begin']),array("elt",$tmp['end']));
        }/*elseif($date == ""){
            $tmp = D("WrkInvoicePlan")->getQdrDate(1);
            $filter['latest_invoice_time'] = array(array("egt",$tmp['begin']),array("elt",$tmp['end']));
        }*/
    }

    //无计划开票结束开票
    public function finishInvoiceAction(){
        if(IS_POST){
            $id = I("post.id");
            $result = M("WrkInvoicePlan")->where("id = $id")->setField("state",2);
            if($result !== false){
                $data["user_name"] = $this->_user_session->userName;
                $data["branch_name"] = $this->_user_session->currBranchName;
                $data["kind"] = 0;
                $data["func"] = "WrkInvoicePlanDetail";
                $data["operation"] = ACTION_NAME;
                $data["content"] = $id;
                $data["create_time"] = time();
                $data["ip"] = get_client_ip();
                M("SysLog")->add($data);
                $agreement_id = M("WrkInvoicePlan")->where("id = $id")->getField("agreement_id");
                D("WrkInvoicePlan")->sendFinishInvoiceMessage($agreement_id);
                $this->ajaxReturn(array("error"=>0,"message"=>"操作成功！"));
            }else{
                $this->ajaxReturn(array("error"=>1,"message"=>"操作失败！"));
            }
        }else{
            $this->display("finishInvoice");
        }
    }

    public function getLogAction(){
        $condition['content'] = I("post.id");
        $condition['func'] = "WrkInvoicePlanDetail";
        $result = M("SysLog")->where($condition)->order("create_time desc")->select();
        foreach ($result as $k=>$v){
            $result[$k]['id'] = $k+1;
            $result[$k]['create_time'] = date("Y-m-d H:i:s",$v['create_time']);
            switch($v['operation']){
                case "finishInvoice":
                    $result[$k]['operation'] = "结束开票";
                    break;
                case "saveInvNoPlan":
                    $result[$k]['operation'] = "修改开票信息";
                    break;
                case "invoice":
                    $result[$k]['operation'] = "新增开票";
                    break;
                case "cancelInvoice":
                    $result[$k]['operation'] = "作废发票";
                    break;
                case "finishInvPlan":
                    $result[$k]['operation'] = "结束开票";
                    break;
                case "addInvoicePlan":
                    $result[$k]['operation'] = "编辑开票计划";
                    break;
                case "autoFinishInv":
                    $result[$k]['operation'] = "自动结束开票";
                    break;
                default:
                    break;
            }
        }
        $this->ajaxReturn($result);
    }

    public function _before_list(&$list)
    {
        parent::_before_list($list); // TODO: Change the autogenerated stub
        foreach ($list as $k=>$v){
            $list[$k]['plan_day'] = date("Y/m/d",$v['plan_day']);
            $list[$k]['amount_noPaid'] = $v['ag_agreement_money'] - $v['amount_paid'];
            if($list[$k]['amount_noPaid'] < 0 ){
                $list[$k]['amount_noPaid'] = 0;
            }
            //开票商户负责人
            if($v['leader_id']){
                $leader = M("SysUser")->where("id = ".$v['leader_id'])->field("name,staff_name")->find();
                $list[$k]['leader_name'] = $leader['staff_name'] == "" ? $leader['name'] : $leader['staff_name'];
            }
            if($v['state'] == 1 or $v['state'] == 2){
                $list[$k]['balance'] = $v['amount_paid'] - $v['ag_agreement_money'];
            }
            //开票客户负责人
            $customer = D("WrkAgreement")->getCustomerUserData("WrkInvoicePlan",$v['ag_company_id']);
            foreach($customer as $key=>$val){
                $list[$k]['customer_leader'] .= empty($val['staff_name']) ? $val['name']."；" : $val['staff_name']."；";
            }
            $list[$k]['recently_invoice_time'] = $v['latest_invoice_time']==""?"":date("Y/m/d",$v['latest_invoice_time']);
            //如果是有计划开票，则判断计划条数是否大于0，不大于0则变为无计划
            if($v['type'] == 1){
                $count = M("WrkInvoicePlanDetail")->where("plan_id = ".$v['id'])->count();
                if($count == 0){
                    $list[$k]['type'] = 0;
                }
            }
        }
    }

    public function _before_detail(&$data)
    {
        parent::_before_detail($data); // TODO: Change the autogenerated stub
        $data['ag_customer_branch'] = M("SysBranch")->where("id = ".$data['ag_company_id'])->getField("name");
        $data['ag_start_time'] = date("Y/m/d",$data['ag_start_time']);
        $data['ag_finish_time'] = date("Y/m/d",$data['ag_finish_time']);
       /* //开票客户负责人
        $customer = D("WrkAgreement")->getCustomerUserData("WrkInvoicePlan",$data['ag_company_id']);
        foreach($customer as $key=>$val){
            $data['customer_leader'] .= empty($val['staff_name']) ? $val['name']."；" : $val['staff_name']."；";
        }*/
        if($data['leader_id'] != ""){
            $leader = M("SysUser")->where("id = ".$data['leader_id'])->field("staff_name,name")->find();
            $data['leader_name'] = $leader['staff_name'] == "" ? $leader['name']:$leader['staff_name'];
        }
        if(!$data['attach_group']){
            $data['attach_group'] = genUniqidKey();
        }
    }

    public function saveInvNoPlanAction(){
        $id = I("post.id");
        $data['leader_id'] = I("post.leader_id");
        $visiblers = I("post.visiblers");
        if(in_array($data['leader_id'],$visiblers)){
            foreach ($visiblers as $k=>$v){
                if($data['leader_id'] == $v){
                    unset($visiblers[$k]);
                }
            }
        }
        $data['visiblers'] = implode(",",$visiblers);
        $data['comments'] = I("post.comments");
        $is_sendWx = I("post.is_sendWX");
        if($is_sendWx != 1){
            $data['is_sendWX'] = 0;
        }else{
            $data['is_sendWX'] = 1;
        }
        $result = M("WrkInvoicePlan")->where("id = $id")->save($data);
        if($result !== false){
            $data["user_name"] = $this->_user_session->userName;
            $data["branch_name"] = $this->_user_session->currBranchName;
            $data["kind"] = 0;
            $data["func"] = "WrkInvoicePlanDetail";
            $data["operation"] = ACTION_NAME;
            $data["content"] = $id;
            $data["create_time"] = time();
            $data["ip"] = get_client_ip();
            M("SysLog")->add($data);
            D("WrkInvoicePlan")->addModuleUserAccessData("WrkInvoicePlan",$id,I("post.company_id"));
            $this->ajaxReturn(array("error"=>0,"message"=>"保存成功！"));
        }else{
            $this->ajaxReturn(array("error"=>1,"message"=>"保存失败！"));
        }
    }

}