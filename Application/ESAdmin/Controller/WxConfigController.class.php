<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/5
 * Time: 14:43
 */

namespace ESAdmin\Controller;


use Common\Lib\Controller\DataController;

class WxConfigController extends DataController
{
    public function indexAction() {
        $this->assignPermissions(); //权限设置
        if ($this->_user_session->userType == USER_TYPE_COMPANY_MANAGER) {
            $model = D("WxConfig")->where("branch_id=" . $this->_user_session->currBranchId)->find();
            define("__FORM_ACTION__", empty($model)?"add":"update");
//            $this->_before_view($model);
            if (empty($model)){
                $model["token"] = substr(md5(uniqid()), 0, 24);
            }
            $model["url"] = "https://eshop.caisuikx.com/WeChat/index/bid/" . $this->_user_session->currBranchId;
            $this->assign("model", $model);

        }
        $this->setWXQrcode();
        $this->display();
    }
    public function getTemplateAction(){
        $type = I('post.type');
        $tpl_id = '';
        switch ($type){
            case 'serviceFlow':
                $tpl_id = 'OPENTM204989182';
                $tpl_title = "服务进度通知";
                break;
            case 'toolSend':
                $tpl_id = 'OPENTM202312018';
                $tpl_title = "客户请求通知";
                break;
            case 'borrowApply':
                $tpl_id = 'OPENTM408101579';
                $tpl_title = "物品申请提醒";
                break;
            case 'transferApply':
                $tpl_id = 'OPENTM413009573';
                $tpl_title = "交接完成通知";
                break;
            case 'return':
                $tpl_id = 'OPENTM414735774';
                $tpl_title = "物品归还通知";
                break;
            case 'bindCompany':
                $tpl_id = 'OPENTM207372650';
                $tpl_title = "绑定通知";
                break;
            default:
                $this->ajaxReturn(['error'=>1,'message'=>'获取失败,没有该模板']);
                break;
        }
        $wechat = getWeChatInstance();
        $result["errcode"] = 0;
        if ($wechat->isRemoteHost()) {
            $template_id =  $this->addTemplateMessage($wechat, $tpl_id, $tpl_title);
            if (!$template_id) {
                $result["errcode"] = $wechat->errCode;
                $result["errmsg"] = $wechat->errMsg;
                \Think\Log::write("send_wx_message error!= message:" . $wechat->errMsg.'|code:'.$wechat->errCode);
                $this->ajaxReturn(['error'=>1,'message'=>'获取失败,请到公众号内查看模板消息是否开启']);
            }else{
                $this->ajaxReturn(['error'=>0,'message'=>'获取成功,请点击保存','data'=>$template_id]);
            }
        }
    }

    //不能直接调用接口，需要判断微信后台模板是否没有再添加，否则会出现重复
    private function addTemplateMessage($wechat, $tpl_id_short, $title){
        $list = $wechat->getTemplateMessageList();//先获取微信后台模板
        $template_id = "";
        foreach ($list["template_list"] as $key=>$tpl){
            if ($tpl["title"] == trim($title)){
                $template_id = $tpl["template_id"];
                break;
            }
        }
        if (empty($template_id)){
            $template_id = $wechat->addTemplateMessage($tpl_id_short);
        }
        return $template_id;
    }

    private function setWXQrcode(){
        $wechat = getWeChatInstance();
        $qrcode_data = $wechat->getQRCode("0",1);
        $img_url = $wechat->getQRUrl($qrcode_data['ticket']);
        $this->WxQrcode = $img_url;
    }
//    protected function _before_write($type, &$data)
//    {
//        if (self::ACTION_ADD == $type){
//            $data['created_at'] = time();
//        }
//        $data['updated_at'] = time();
//        parent::_before_write($type, $data); // TODO: Change the autogenerated stub
//    }
}