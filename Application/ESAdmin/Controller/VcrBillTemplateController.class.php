<?php
/**
 * @auhor kcg
 * */
namespace ESAdmin\Controller;

use Common\Lib\Controller\DataController;

/**
 *导入配置(单证资料模板)
 * */
class VcrBillTemplateController extends DataController{
    /**
     * 模板导出
     * @param int $id 要导出的模板
     * */
    public function exportTemplateAction($id = null){
        $id = intval($id);
        if ($id == 0) {
            die;
        }

        $condition["id"] = $id;
        $condition["branch_id"] = ['in', [0, getBrowseBranchId()]];
        $data = D(CONTROLLER_NAME)->where($condition)->find();
        if (empty($data)) {
            E('模板不存在!');
        }

        $file_name = $data['name'] . '.xlsx';
        vendor('PHPExcel18.PHPExcel');
        $objPHPExcel = new \PHPExcel();
        $objPHPExcel->setActiveSheetIndex(0);
        $this->setColumn($objPHPExcel, $data['deal_time'], "交易日期");
        $this->setColumn($objPHPExcel, $data['income'], "贷方发生额（收入）");
        $this->setColumn($objPHPExcel, $data['disbursement'], "借方发生额（支取）");
        $this->setColumn($objPHPExcel, $data['account'], "对方(账号|户名)");
        $this->setColumn($objPHPExcel, $data['summary'], "摘要");
        $this->setColumn($objPHPExcel, $data['remarks'], "备注");
        if (!empty($data['mark'])) {
            $objPHPExcel->getActiveSheet()->setCellValue($data['income'] . '2', $data['mark']);
        }

        $file_name = iconv('UTF-8', 'GBK//IGNORE', $file_name);
        $this->setExcelHeader($file_name);
        $objWriter = new \PHPExcel_Writer_Excel2007($objPHPExcel);
        $objWriter->save('php://output');
        unset($objWriter);
        unset($objPHPExcel);
    }

    public function assignPermissions($controller = CONTROLLER_NAME){
        parent::assignPermissions($controller); // TODO: Change the autogenerated stub
    }

    public function listAction(){
        $page_index = I("page/d", 1);
        $page_size = I("rows/d", 1024);
        $_filter = array();
        $this->_parseFilter($_filter);
        if ($this->hasRelationCondition($_filter)) { //条件中是否有关联表的查询字段，关联字段查询格式为 q-b*xxx(q:查询模式，b管理部的别名,xxx关联表字段
            $count = D(CONTROLLER_NAME)->where($_filter)->count();
        } else {
            $count = D(CONTROLLER_NAME)->where($_filter)->count();
        }
        $list = D(CONTROLLER_NAME)->where($_filter)->page($page_index, $page_size)->order('branch_id DESC')->select();
        $this->_before_list($list);
        $result["total"] = $count;
        $result["rows"] = $list;
        header('Content-Type:application/json; charset=utf-8');
        exit(json_encode($result));
    }

    public function _parsefilter(&$filter){
        if ($this->isAdmin()) {
            $filter['branch_id'] = 0;
        } else {
            $filter['branch_id'] = ['in', [0, getBrowseBranchId()]];
        }
        if ($name = I('post.name')) {
            $filter['name'] = ['like', '%' . $name . '%'];
        }

        if ($template = I('post.template')) {
            if ($template == 1) {
                $filter['branch_id'] = 0;
            }
            if ($template == 2) {
                $filter['branch_id'] = getBrowseBranchId();
            }
        }

        parent::_parsefilter($filter); // TODO: Change the autogenerated stub
    }

    public function _before_detailAction($id = null){

    }

    protected function _getDetailData($id){
        $record = [];
        if ($id) {
            $condition["a.id"] = $id;
            $condition["a.branch_id"] = ['in', [0, getBrowseBranchId()]];
            $record = D(CONTROLLER_NAME)->alias("a")->relation(true)->field("a.*")->where($condition)->find();
        }
        if (!empty($record) && $record['branch_id'] == 0) {
            unset($record['id']);
            define("__FORM_ACTION__", "add");
        } else {
            define("__FORM_ACTION__", "update");
        }

        $this->_before_detail($record);
        return $record;
    }

    public function _before_write($type, &$data){
        parent::_before_write($type, $data); // TODO: Change the autogenerated stub
        $pregInt = '/^[\d].*$/';
        if (!preg_match($pregInt, $data['start']) || $data['start'] < 1) {
            return $this->ajaxReturn(['code' => 1, 'message' => '数据起始行期望是个大于0的整数']);
        }

        $this->validateRows($data['deal_time'], '交易时间');
        $this->validateRows($data['income'], '收入');
        $this->validateRows($data['disbursement'], '支出');
        $this->validateRows($data['account'], '账户');
        $this->validateRows($data['summary'], '摘要', false);
        $this->validateRows($data['remarks'], '备注', false);
        if ($this->isAdmin()) {
            $data['branch_id'] = 0;
        } else {
            $data['branch_id'] = getBrowseBranchId();
        }
    }

    public function queryAction(){
        return $this->display('query');
    }

    protected function _getLastData($id){
        $record = array();
        if ($id) {
            $condition["a.id"] = $id;
            $record = D(CONTROLLER_NAME)->alias("a")->relation(true)->field("a.*")->where($condition)->find();
        }
        $this->_before_detail($record);

        return $record;
    }

    private function validateRows($val, $attributeLable, $isEmpty = true){
        if ($isEmpty && empty($val)) {
            return $this->ajaxReturn(['code' => 1, 'message' => $attributeLable . '不能为空']);
        }

        $pregRow = '/^[A-Z]{0,2}$/';
        if (!preg_match($pregRow, $val)) {
            return $this->ajaxReturn(['code' => 1, 'message' => $attributeLable . '期望是大写字母,并且最多2位']);
        }
    }

    private function isAdmin(){
        return $this->_user_session->isAdmin;
    }

    private function setColumn(&$objPHPExcel, $column, $name){
        if (!empty($column)) {
            $objPHPExcel->getActiveSheet()->getColumnDimension($column)->setWidth(25);
            $objPHPExcel->getActiveSheet()->setCellValue($column . '1', $name);
        }
    }
}