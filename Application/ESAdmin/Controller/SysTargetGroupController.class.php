<?php

namespace ESAdmin\Controller;

use Common\Lib\Controller\DataController;

class  SysTargetGroupController extends DataController {

    protected function getChosenNameField() {
        return "a.value";
    }
    protected function _after_getKeyNameList(&$list)
    {
        parent::_after_getKeyNameList($list); // TODO: Change the autogenerated stub
        array_unshift($list,['value'=>'other','text' => '未分组']);
    }

    protected function _before_write($type, &$data) {
        if(trim($data['value'])==""){
            E("不能为空！");
        }
        parent::_before_write($type, $data);
    }

    public function listAction() {
        $page_index = I("page/d", 1);
        $page_size = I("rows/d", 1024);
        $_order = array();
        $this->_parseOrder($_order);
        $_filter = array();
        $this->_parseFilter($_filter);
        $count = D(CONTROLLER_NAME)->setDacFilter("a")->where($_filter)->count();
        $list = D(CONTROLLER_NAME)->setDacFilter("a")->relation(true)->field("a.*")->where($_filter)->page($page_index, $page_size)->order($_order)->select();
        $this->_before_list($list);
        $result["total"] = $count+1;
        $result["rows"] = $list;
        header('Content-Type:application/json; charset=utf-8');
        exit(json_encode($result));
    }

    protected function _before_list(&$list)
    {
        parent::_before_list($list);
        foreach($list as $k=>$v){
            $list[$k]['user_count'] = D('SysUser')->where(['group_id'=>$v['id'],'is_follow'=>1])->count();
        }
        // $tmp = array('id'=>0,'value' => '未分组',，'branch_id' => $this->_user_session->currBranchId);
        // $tmp['user_count'] = D('SysUser')->where(['group_id' =>['exp','is null'],'is_follow'=>1])->count();
        $tmp = array('id'=>0,'value' => '未分组','branch_id' => $this->_user_session->currBranchId);
        $condition_groups_other['is_follow'] = 1;
        $condition_groups_other['_string'] = 'group_id is null or group_id =""';
        $condition_groups_other['branch_id'] = $this->_user_session->currBranchId;
        $tmp['user_count'] = D('SysUser')->where($condition_groups_other)->count();
        array_push($list,$tmp);
    }

    protected function _before_detail(&$data){
        if (empty($data)) {
            $data['id'] = 0;
            $data['value'] = '未分组';

        }else{
            $data['user_count'] = D('SysUser')->where(['group_id'=>$data['id'],'is_follow'=>1])->count();
        }
        parent::_before_detail($type, $data);
    }

    public function userListAction($group_id = null)
    {
        //获取标签和分组
        $groups = D('ComPotential')->getBranchTarget('group');
        $tags = D('ComPotential')->getBranchTarget('tag');
        $condition_groups['is_follow'] = 1;
        $condition_groups_other['is_follow'] = 1;
        $sysUser = D('SysUser')->where(['group_id'=>$group_id])->select();
        $user_ids = [];
        foreach ($sysUser as $k => $v) {
            array_push($user_ids, $v['id']);
        }
        
        foreach($groups as $k=>$v){
            if ($v['id'] == $group_id) {
                unset($groups[$k]);
            }else{
                $condition_groups['group_id'] = $v['id'];
                $groups[$k]['user_count'] = D('SysUser')
                ->where($condition_groups)
                ->count();
            }
        }
        //未分组处理
        $tmp = array('id'=>'other','value' => '未分组','branch_id' => $this->_user_session->currBranchId);
        $condition_groups_other['_string'] = 'group_id is null or group_id =""';
        $condition_groups_other['branch_id'] = $this->_user_session->currBranchId;
        $tmp['user_count'] = D('SysUser')
            ->where($condition_groups_other)
            ->count();
        array_unshift($groups,$tmp);
        //标签出路
        $condition_tags['b.is_follow'] = 1;
        if (!empty($user_ids)) {
            $condition_tags['b.id'][] = array("not in",$user_ids);
        }
        // $condition_tags['b.group_id'] = array("neq",$group_id);
        foreach($tags as $k=>$v){
            $condition_tags['a.tag'] = $v['id'];
            $tags[$k]['user_count'] = D('SysUserRelationTag')
                ->alias('a')
                ->join('LEFT JOIN sys_user b ON b.id = a.user_id')
                ->where($condition_tags)->count();
        }
        $this->groups = $groups;
        $this->tags = $tags;
        $this->group_id = $group_id;

        $this->display('userList');
    }

    public function getUserAction($group_id = null)
    {
        $_filter = [];
        // $_filter['a.group_id'] = array("neq",$group_id);
        if (!empty(I('groups'))) {
            $groups = I('groups');
            if (in_array('other',I('groups'))) {
                unset($groups[array_search('other',I('groups'))]);
                $_filter['_string'] = '';
                if (count($groups) > 0) {
                    $_filter['_string'].= ' a.group_id in ('.implode(',',$groups).') ';
                    $_filter['_string'].= ' or ';
                }
                $_filter['_string'].= ' a.group_id is null or  a.group_id = ""';
            } else {
                $_filter['a.group_id'][] = array('in',$groups);
            }
        }
        if (!empty(I('tags'))) {
            A('UserParse')->handlerTagsSearch(I('tags'),$_filter);
        }
        if (I('lk_name') != ''){
            $lk_name = I('lk_name');
            $_filter['a.name'] = array("like", sprintf("%%%s%%",$lk_name));
        }
        $_filter['a.branch_id'] = $this->_user_session->currBranchId;
        $_filter['a.is_follow'] = 1;
        $sysUser = D('SysUser')->where(['group_id'=>$group_id])->select();
        $user_ids = [];
        foreach ($sysUser as $k => $v) {
            array_push($user_ids, $v['id']);
        }
        if (!empty($user_ids)) {
            $_filter['a.id'][] = array("not in",$user_ids);
        }
        $count = M('SysUser') ->alias('a')
                            ->where($_filter)
                            ->count();
        $user_total = M('SysUser') ->alias('a')
                                ->field('a.id,a.name')
                                ->where($_filter)
                                ->select();
        $users = M('SysUser') ->alias('a')
                              ->join('left join sys_target_group as target on target.id = a.group_id')
                              ->where($_filter)
                              ->field('a.*,if(target.id > 0,target.value,"未分组") as group_name')
                              ->page(I('page'),20)
                              ->order('a.followed_at desc')
                              ->select();
        foreach($users as $key => $val) {
            $users[$key]['tag_name'] = D('UserParse')->getGroupNames($val);
        }
        $this->ajaxReturn(['total'=>$count,'data'=>$users,'user_total' => $user_total]);
    }

    public function getUserByGroupIdAction($group_id = null)
    {
        $condition = ['a.group_id'=>$group_id,'a.is_follow'=>1,'a.branch_id'=>$this->_user_session->currBranchId];
        if ($group_id == '0') {
            unset($condition['a.group_id']);
            $condition['_string'] = 'a.group_id is null or a.group_id =""';
        }
        $sysUser = M('SysUser') ->alias('a')
            ->join('left join sys_target_group as target on target.id = a.group_id')
            ->where($condition)
            ->field('a.id,a.head_pic,a.name,a.comments,a.mobile,if(target.id > 0,target.value,"未分组") as group_name')
            ->order('a.followed_at desc')
            ->select();
        foreach ($sysUser as $k => $v) {
            $sysUser[$k]['tags_value'] = D('UserParse')->getGroupNames($v);
            $sysUser[$k]['company_names'] = D('SysUser')->getCompanyNames($v);

        }
        $this->ajaxReturn($sysUser);
    }

    public function removeUserAction()
    {
        $user_ids = I("post.user_ids");
        $sysUser = M('SysUser')
            ->where(['id'=>array('in',$user_ids)])
            ->save(['group_id'=>null]);
        $data['code'] = 0;
        $data['message'] = "移除成功";
        $this->ajaxReturn($data);
    }   
//     public function listAction() {
//         $page_index = I("page/d", 1);
//         $page_size = I("rows/d", 1024);
//         $_order = array();
//         $this->_parseOrder($_order);
//         $_filter = array();
//         $this->_parseFilter($_filter);
//         $count = D(CONTROLLER_NAME)->setDacFilter("a")->where($_filter)->count();
//         $list = D(CONTROLLER_NAME)->setDacFilter("a")->relation(true)->field("a.*")->where($_filter)->page($page_index, $page_size)->order($_order)->select();
//         $this->_before_list($list);
//         $result["total"] = $count;
//         $result["rows"] = $list;
//         for($i=0;$i<$count;$i++){
//             $where = ['group_id'=>$result['rows'][$i]['id'],'is_follow' => 1];
//             $total_count = M('SysUser')->where($where)->count();
//             $result['rows'][$i]['total_count']=$total_count;
//         }
//         header('Content-Type:application/json; charset=utf-8');
//         exit(json_encode($result));
//     }
}