<?php

namespace ESAdmin\Controller;

use Common\Lib\Controller\DataController;
use Think\Exception;
use Common\Lib\Controller\ComplexDataController;
class WrkInvoicePlanDetailController extends ComplexDataController {


    public function listAction() {
        $page_index = I("page/d", 1);
        $page_size = I("rows/d", 1024);
        $_order = array();
        $this->_parseOrder($_order);
        $_filter = array();
        $this->_parseFilter($_filter);
        if ($this->hasRelationCondition($_filter)) { //条件中是否有关联表的查询字段，关联字段查询格式为 q-b*xxx(q:查询模式，b管理部的别名,xxx关联表字段
            $count = D(CONTROLLER_NAME)->setDacFilter("a")->relation(true)->where($_filter)->count();
        }else{
            $count = D(CONTROLLER_NAME)->setDacFilter("a")->where($_filter)->count();
        }
        $list = D(CONTROLLER_NAME)->setDacFilter("a")->relation(true)->field("a.*")->where($_filter)->page($page_index, $page_size)->order($_order)->select();
        $this->_before_list($list,$count);
        $result["total"] = $count;
        $result["rows"] = $list;
        header('Content-Type:application/json; charset=utf-8');
        exit(json_encode($result));
    }

    protected function _parsefilter(&$filter) {
        parent::_parsefilter($filter);
        $filter["wipd.is_invoice"] = 1;//开票开关开启
        $filter["wipd.type"] = 0;
        $filter['a.creater_id'] = array("neq","");
        $state = I("post.state");
        if ($state == 2){
            //状态为逾期
            //$filter["a.plan_day"] = array("lt", time());
            $filter["wipd.state"] = array(array("neq", 1),array("neq",100));
        }elseif($state != ""){
            $filter["wipd.state"] = $state;
        }
        //筛选查看计划开票日期
        $plan_day = I("post.plan_day");
        $qdr_begin = I("post.begin_plan_day");
        $qdr_end = I("post.end_plan_day");
        //如果不是自定义查看时间
        if($qdr_begin == "" && $qdr_end==""){
            $today = D("WrkInvoicePlan")->getQdrDate(1);
            if($plan_day==1 || $plan_day == 2 || $plan_day == 3){
                //本周
                $date = D("WrkInvoicePlan")->getQdrDate($plan_day);
                if($state == 2){
                    //state = 2 为查看逾期状态 计划时间小于今天开始时间为完成开票即为逾期
                    $filter['wipd.plan_day'] = array("lt",$today['begin']);
                }else{
                    $filter['wipd.plan_day'] = array(array("egt",$date['begin']),array("lt",$date['end']));
                }
            }
        }else{
            //区间
            $filter['wipd.plan_day'] = array(array("egt", strtotime($qdr_begin)), array("elt", strtotime($qdr_end)));
        }
    }
   public function _before_list(&$list,&$count)
    {
        //获取开票提醒数据
        $this->getNotifyList($list,$count);
        foreach ($list as $k=>$v){
            if($list[$k]["list_type"]=="") {
                //类型为不是提醒则为开票
                $list[$k]["list_type"] = "开票";
            }
            //开票商户负责人
            if($v['leader_id']){
                $leader = M("SysUser")->where("id = ".$v['leader_id'])->field("name,staff_name")->find();
                $list[$k]['ag_service_man'] = $leader['staff_name'] == "" ? $leader['name']:$leader['staff_name'];
            }
            $list[$k]['plan_day'] = date("Y/m/d",$v['wipd_plan_day']);
            //开票客户人员
            $customer = D("WrkAgreement")->getCustomerUserData("WrkInvoicePlan",$v['ag_company_id']);
            foreach($customer as $key=>$val){
                $list[$k]['customer_leader'] .= empty($val['staff_name']) ? $val['name']."；" : $val['staff_name']."；";
            }
        }
        parent::_before_list($list); // TODO: Change the autogenerated stub
    }

    //获取开票提醒数据
    public function getNotifyList(&$list,&$count){
        $postData = I("post.");
        if($postData['begin_plan_day'] == "" && $postData['end_plan_day'] ==""){
            if($postData['state'] == ""){
                //本周或本月
                if($postData['plan_day']==2 || $postData['plan_day'] == 3){
                    $date = D("WrkInvoicePlan")->getQdrDate($postData['plan_day']);
                    $condition["b.notify_day"] =array(array("lt",$date['end']),array("neq",''));
                    $condition["b.plan_day"] = array("egt",$date['end']);
                }else{
                    $endToday=mktime(0,0,0,date('m'),date('d')+1,date('Y'))-1;
                    $condition["b.notify_day"] = array(array("lt",$endToday),array("neq",''));
                    $condition["b.plan_day"] = array("egt",$endToday);
                }
                $wip_state = I("q-wip*state");
                if($postData['q-ag*company_id'] == "" && $postData['q-ag*customer_leader_id'] =="" && $postData['q-leader_id'] == "" && $postData['q-ag*name'] == "" && $wip_state == "") {
                    $condition["b.state"] = array(array("neq", 1),array("neq",100));//不等于已开 已取消
                    $condition["b.type"] = 0;
                    $condition["b.is_invoice"] = 1;//开启开票
                    $condition["b.is_notify"] = 1;//开启提醒
                    $condition["b.branch_id"] = $this->_user_session->currBranchId;
                    //获取提醒数据
                    $result = D("WrkInvoicePlanDetail")
                        ->setDacFilter("a")
                        ->join("wrk_invoice_plan_detail b on b.plan_id = a.id")
                        ->where($condition)->field("b.plan_id,b.id,b.plan_day as wipd_plan_day,b.state as wipd_state,
                        b.plan_money as wipd_plan_money,b.invoice_day as wipd_invoice_day,b.true_money as wipd_true_money")->select();
                    foreach ($result as $k => $v) {
                        $result[$k]['list_type'] = "提醒";
                        $tmp = M("WrkInvoicePlan")->alias("a")
                            ->join("wrk_agreement as wg on a.agreement_id = wg.id")
                            ->field("wg.agreement_sn as ag_agreement_sn,wg.company_id as ag_company_id,wg.name ag_name,
                wg.customer_leader_id as ag_customer_leader_id,wg.leader_id as ag_leader_id,a.leader_id")
                            ->where("a.id = " . $v['plan_id'])->find();
                        /*$com = D("WrkInvoicePlan")->getCompanyLeader($result[$k]['ag_company_id'],CAJ_BRANCH_INVOICE);
                        $result[$k]['customer_leader'] = $com['customer_leader'];
                        $result[$k]['customer_visiblers'] = $com['customer_visiblers'];*/
                        $result[$k]['id'] = $v['plan_id'];
                        $result[$k]['company_name'] = M("SysBranch")->where("id = ".$tmp['ag_company_id'])->getField("name");
                        foreach ($tmp as $key => $value) {
                            $result[$k][$key] = $value;
                        }
                        array_unshift($list, $result[$k]);
                        $count ++;
                    }
                }
            }
        }

    }

    public function _before_detail(&$data)
    {
        parent::_before_detail($data); // TODO: Change the autogenerated stub
        //客户公司名称
        $data['ag_customer_branch'] = M("SysBranch")->where("id = ".$data['ag_company_id'])->getField("name");
        $data['ag_start_time'] = date("Y/m/d",$data['ag_start_time']);
        $data['ag_finish_time'] = $data['ag_finish_time'] == "" ? "" : date("Y/m/d",$data['ag_finish_time']);
        //开票商户负责人
        if($data['leader_id']){
            $leader = M("SysUser")->where("id = ".$data['leader_id'])->field("name,staff_name")->find();
            $data['leader_name'] = $leader['staff_name'] == "" ? $leader['name'] : $leader['staff_name'];
        }
        /*//开票客户负责人
        $customer = D("WrkAgreement")->getCustomerUserData("WrkInvoicePlan",$data['ag_company_id']);
        foreach($customer as $key=>$val){
            $data['customer_leader'] .= empty($val['staff_name']) ? $val['name']."；" : $val['staff_name']."；";
        }*/
    }

    //结束开票
    public function finishInvPlanAction(){
        if(IS_POST){
            $agreement_id = I("post.id");
            $model = M("WrkInvoicePlanDetail");
            try{
                $model->startTrans();
                //将开票总状态设为手动结束
                $result = M("WrkInvoicePlan")->where("agreement_id = $agreement_id")->setField("state",2);
                if($result !== false){
                    $condition['branch_id'] = $this->_user_session->currBranchId;
                    $plan_id = M("WrkInvoicePlan")->where("agreement_id = $agreement_id")->getField("id");
                    //取消未开的每期计划
                    $condition['plan_id'] = $plan_id;
                    $condition['state'] = array(array("neq",1),array("neq",2));
                    $condition['type'] = 0;
                    M("WrkInvoicePlanDetail")->where($condition)->setField("state",100);
                    $this->addLog($plan_id);
                    $model->commit();
                    D("WrkInvoicePlan")->sendFinishInvoiceMessage($agreement_id);
                    $this->ajaxReturn(array("error"=>0,'message'=>"结束开票成功！"));
                }else{
                    $this->ajaxReturn(array("error"=>1,'message'=>"结束开票失败！"));
                }
            }catch(\Think\Exception $ex){
                $model->rollback();
            }
        }else{
            $this->display();
        }
    }
    //获取计划
    public function getInvoicePlanAction(){
        $id = I("get.id");
        if($id){
            $plan_id = M("WrkInvoicePlan")->where("agreement_id = $id ")->getField("id");
            if($plan_id){
                $result = M("WrkInvoicePlanDetail")->where("plan_id = $plan_id and type = 0")->order("plan_day asc")->select();
                foreach ($result as $k=>$v){
                    $result[$k]['plan_day'] = date("Y/m/d",$v['plan_day']);
                    if($result[$k]['notify_day']){
                        $result[$k]['notify_day'] = date("Y/m/d",$v['notify_day']);
                    }
                }
                $this->ajaxReturn($result);
            }
        }
    }
    //获取开票记录
    public function getInvoiceRecordAction(){
        $condition['plan_id'] = I("post.plan_id");
        $condition['branch_id'] = $this->_user_session->currBranchId;
        $result = M("WrkInvoiceRecord")->where($condition)->order("invoice_day desc")->select();
        foreach ($result as $k=>$v){
            if($result[$k]['confirm_man']){
                $result[$k]['confirm_man'] = M("SysUser")->where("id = ".$v['confirm_man'])->getField("name");
            }else{
                $result[$k]['confirm_man'] = "未签收";
            }
            $result[$k]['invoice_day'] = date("Y/m/d",$v['invoice_day']);
        }
        $this->ajaxReturn($result);
    }

    //开票通知
    public function invoiceAction($plan_id = "",$is_set_plan= "",$model = ""){
        if(IS_POST){
            $result = $this->handlerInvoice($plan_id);
            if($is_set_plan) {
                M("WrkInvoicePlan")->where("id = $plan_id")->setField("type",1);
                $this->handlerInvoicePlan($plan_id,$model);
            }
            $this->ajaxReturn($result);
        }else{
            $plan_id = I("get.plan_id");
            $type = I("get.type");
            $this->assign("plan_id",$plan_id);
            $this->assign("type",$type);
            $this->display();
        }
    }

    //处理开票数据
    public function handlerInvoice($plan_id){
        $model = M("WrkInvoicePlanDetail");
        try {
            $model->startTrans();
            $dataList = array();
            $postData = I("post.");
            if($postData['invoice_money'] == ""){
                E("请至少添加一条记录！");
            }
            if(!$plan_id){
                $plan_id = I("post.plan_id");
            }
            $total_money = "";
            foreach ($postData['invoice_day'] as $key=>$val){
                $data["invoice_day"] = strtotime($val);
                $data["invoice_id"] = $postData['invoice_id'][$key];
                if($postData['invoice_money'][$key] <= 0){
                    E("请输入正确的发票金额！");
                }
                $data["invoice_sum"] = $postData['invoice_money'][$key];
                $data["invoice_type"] = $postData['invoice_type'][$key];
                $data["plan_id"] = $plan_id;
                $data["express_name"] = $postData['express_name'];
                $data["express_id"] = $postData['express_id'];
                $data["attach_group"] = $postData['attach_group'][$key];
                $data["branch_id"] = $this->_user_session->currBranchId;
                $dataList[] = $data;
                $total_money += $postData['invoice_money'][$key];
            }
            $result = true;
            //添加开票记录
            foreach ($dataList as $k=>$data){
                $result = M("WrkInvoiceRecord")->add($data);
                if($result !== false){
                    $dataList[$k]['id'] = $result;
                    $dataList[$k]['invoice_day'] = date("Y/m/d",$data['invoice_day']);
                }else{
                    E("开票失败！");
                    //$result = false;
                    break;
                }
            }
            if($result !== false){
                $is_over = false;//是否结束
                $is_plan = M("WrkInvoicePlan")->where("id = ".$plan_id)->find();//0无计划 1有计划
                $amount_paid = $is_plan['amount_paid'] + $total_money;
                //合同已开票金额
                $invoice['latest_invoice_time'] = time();
                $invoice['amount_paid'] = $amount_paid;
                M("WrkInvoicePlan")->where("id = ".$plan_id)->save($invoice);
                //$this->handlerInvoiceApply($plan_id,$total_money);//处理开票申请，目前开票申请已隐藏
                if($is_plan['type']){
                    //有计划开票 且已开启单期开票开关的
                    $plan_detail = M("WrkInvoicePlanDetail")->where("plan_id = ".$plan_id." and state != 1 and state != 100 and is_invoice = 1")->order("plan_day asc")->select();
                    if(!$plan_detail){
                        E("暂无已开启开票的计划！");
                    }
                    foreach($plan_detail as $key=>$value){
                        $mark = $total_money - ($value['plan_money'] - $value['true_money']);
                        //开票总金额-单期剩余金额 > 0 本期全部已开
                        if($mark >= 0){
                            $tmp['state'] = 1;
                            $tmp['invoice_day'] = time();
                            //是最后一期 自动结束开票计划
                            if($key == count($plan_detail)-1){
                                $tmp['true_money'] = $value['true_money'] + $total_money;
                                $total_money = 0;
                                $is_over = M("WrkInvoicePlan")->where("id = ".$plan_id)->setField("state",1);
                            }else{
                                $tmp['true_money'] = $value['plan_money'];
                                $total_money = $total_money - ($value['plan_money'] - $value['true_money']);
                            }
                            $result = M("WrkInvoicePlanDetail")->where("id = ".$value['id'])->save($tmp);
                            if(!$result){
                                E("操作失败");
                            }
                        }else{
                            //开票总金额-单期剩余金额 < 0 本期部分已开
                            $tmp['state'] = 2;
                            $tmp['invoice_day'] = time();
                            $tmp['true_money'] = $value['true_money'] + $total_money;
                            $result = M("WrkInvoicePlanDetail")->where("id = ".$value['id'])->save($tmp);
                            if(!$result){
                                E("操作失败");
                            }
                            break;
                        }
                    }
                    if($result !== false){
                        $this->addLog($plan_id);
                        if($is_over){
                            $this->autoFinishAddLog($plan_id);
                        }
                        $model->commit();
                        D("WrkInvoicePlan")->sendWXInvoiceMessage($dataList,2);
                        return array("error"=>0,"message"=>"操作成功！","record"=>$dataList,"is_over"=>$is_over);
                    }else{
                        return array("error"=>1,"message"=>"操作失败！");
                    }
                }else{
                    //无计划开票
                    $invoice = M("WrkInvoicePlan")->alias("a")->join("wrk_agreement as b on a.agreement_id = b.id")
                        ->where("a.id = ".$plan_id)->field("a.amount_paid,b.agreement_money")->find();
                    //已开票金额大于合同金额，开票结束
                    $tmp['amount_paid'] = $invoice['amount_paid'];
                    if($invoice['amount_paid'] >= $invoice['agreement_money']){
                        $tmp['state'] = 1;
                    }
                    $is_over = M("WrkInvoicePlan")->where("id = ".$plan_id)->save($tmp);
                    if($is_over !== false){
                        $this->addLog($plan_id);
                        if($is_over){
                            $this->autoFinishAddLog($plan_id);
                        }
                        $model->commit();
                        //发送通知
                        D("WrkInvoicePlan")->sendWXInvoiceMessage($dataList,2);
                        return array("error"=>0,"message"=>"开票成功","record"=>$dataList,"is_over"=>$is_over);
                    }else{
                        E("开票失败");
                    }
                }
            }else{
                E("操作失败");
            }
        } catch (\Think\Exception $ex) {
            $model->rollback();
            return array("error"=>0,"message"=>$ex->getMessage());
        }
    }

    //开票通知 处理开票申请
    public function handlerInvoiceApply($plan_id,$total_money){
        $apply = M("WrkInvoicePlanDetail")->where("plan_id = $plan_id and type = 1 and state != 5")->select();
        if($apply){
            foreach ($apply as $k=>$v){
                $mark = $total_money - ($v['plan_money'] - $v['true_money']);
                if($mark >= 0){
                    $data['state'] = 1;
                    $data['true_money'] = $v['plan_money'];
                    $data['update_time'] = time();
                    M("WrkInvoicePlanDetail")->where("id = ".$v['id'])->save($data);
                    $total_money = $mark;
                }else{
                    $data['state'] = 2;
                    $data['true_money'] = $v['true_money'] + $total_money;
                    $data['update_time'] = time();
                    M("WrkInvoicePlanDetail")->where("id = ".$v['id'])->save($data);
                    break;
                }
            }
        }
    }

    //自动结束开票添加日志
    function autoFinishAddLog($plan_id){
        $data["user_name"] = $this->_user_session->userName;
        $data["branch_name"] = $this->_user_session->currBranchName;
        $data["kind"] = 0;
        $data["func"] = CONTROLLER_NAME;
        $data["operation"] = "autoFinishInv";
        $data["content"] = $plan_id;
        $data["create_time"] = time();
        $data["ip"] = get_client_ip();
        M("SysLog")->add($data);
    }

    //作废发票
    public function cancelInvoiceAction(){
        if(IS_POST){
            $model = M("WrkInvoicePlanDetail");
            try{
                $model->startTrans();
                $id = I("post.id");
                $total_money = I("post.total_money");
                $plan_id = I("post.plan_id");
                //作废开票记录
                if($id != ""){
                    $result = M("WrkInvoiceRecord")->where("id in ($id)")->setField("state",0);
                }else{
                    $this->ajaxReturn(array("error"=>1,"message"=>"请至少选择一条记录"));
                }
                if($result !== false){
                    $result = M("WrkInvoicePlan")
                        ->alias("a")
                        ->join("join wrk_agreement as b on a.agreement_id = b.id")
                        ->where("a.id = $plan_id")
                        ->field("a.amount_paid,b.agreement_money,type")
                        ->find();
                    //无计划、有计划总表已开金额状态变化
                    $amount_paid = $result['amount_paid']-$total_money;
                    if($amount_paid < $result['agreement_money']){
                        $tmp['state'] = 0;
                    }
                    $tmp['amount_paid'] = $amount_paid;
                    if($amount_paid <0){
                        $tmp['amount_paid'] = 0;
                    }
                    M("WrkInvoicePlan")->where("id = $plan_id")->save($tmp);
                    //有计划单期金额状态变化
                    if($result['type'] == 1){
                        //有计划开票 先获取计划
                        $plan_detail = M("WrkInvoicePlanDetail")->where("plan_id = ".$plan_id." and state in (1,2)")->order("plan_day desc")->select();
                        foreach ($plan_detail as $k=>$v){
                            $mask = $total_money - $v['true_money'] ;
                            if($mask >= 0){
                                //总金额大于单期已开金额 已开金额变为0 单期状态变为未开
                                $data['true_money'] = 0;
                                $data['state'] = 0;
                                $total_money -= $v['true_money'];
                                M("WrkInvoicePlanDetail")->where("id = ".$v['id'])->save($data);
                            }else{
                                $data['true_money'] = $v['true_money'] - $total_money;
                                if($data['true_money'] < $v['plan_money']){
                                    $data['state'] = 2;//部分已开
                                }
                                M("WrkInvoicePlanDetail")->where("id = ".$v['id'])->save($data);
                                break;
                            }
                        }
                        //将结束开票变为已取消的计划重新激活
                        M("WrkInvoicePlanDetail")->where("plan_id = ".$plan_id." and state = 100 ")->setField("state",0);
                    }
                    $this->addLog($plan_id);
                    $model->commit();
                    D("WrkInvoicePlan")->sendWXInvoiceMessage($id,1);
                    $this->ajaxReturn(array("error"=>0,"message"=>"操作成功"));
                }else{
                    $this->ajaxReturn(array("error"=>1,"message"=>"操作失败"));
                }
            }catch(\Think\Execption $ex){
                $model->rollback();
            }
        }else{
            $this->display();
        }
    }

    //生成开票计划数据
    public function generatorAction() {
        $beginStr = I('beginStr');
        $endStr = I('endStr');
        $attr = I('attr');
        $cycle = I('cycle');
        switch ($cycle) {
            case 'weekly':
                $definition = ['d'=>$attr[0]];
                break;
            case 'monthly':
                $definition = ['d'=>$attr[0]];
                break;
            case 'quarterly':
                $definition = ['m'=>$attr[0],'d'=>$attr[1]];
                break;
            case 'yearly':
                $definition = ['m'=>$attr[0],'d'=>$attr[1]];
                break;
        }
        $data = [
            'inventory' => [
                ['sn' =>1,'definition'=>$definition]
            ],
            'cycle' => $cycle
        ];
        $list = handlerTimeDistribution($beginStr,$endStr,$data);
        $this->ajaxReturn($list);
    }

    //新增、编辑开票计划
    function addInvoicePlanAction(){
        if(IS_POST){
            $model = M("WrkInvoicePlanDetail");
            try{
                $model->startTrans();
                //开票基本信息
                $id = I("post.id");
                $data['agreement_id'] = $id;
                $data['branch_id'] = $this->_user_session->currBranchId;
                $data['leader_id'] = I("post.leader_id");
                $is_set_plan = I("post.is_plan");
                $data['type'] = 0;
                $data['comments'] = I("post.comments");
                $data['attach_group'] = I("post.attach_group");
                $visiblers = I("post.visiblers");
                $data['is_set_plan'] = $is_set_plan;
                //$this->addModuleAccessData($visiblers,$data['id']);
                $data['visiblers'] = implode(",",$visiblers);
                $collaborators = I("post.collaborators");
                $data['collaborators'] = implode(",",$collaborators);
                //是否开通客户端功能以及通知客户
                $is_sendWX = I("post.is_sendWX");
                if($is_sendWX != 1){
                    $data['is_sendWX'] = 0;
                }else{
                    $data['is_sendWX'] = 1;
                }
                $isSet_plan = M("WrkInvoicePlan")->where("agreement_id = $id")->find();
                if(!$isSet_plan){
                    //如果为创建开票工作
                    $data['create_time'] = time();
                    $data['creater_id'] = $this->_user_session->userId;
                    $tmp = M("WrkInvoicePlan")->add($data);
                    $plan_id = $tmp;
                }else{
                    //更新开票工作
                    $data['update_time'] = time();
                    $data['state'] = 0;
                    if($data['creater_id'] == ""){
                        $data['creater_id'] = $this->_user_session->userId;
                    }
                    $tmp = M("WrkInvoicePlan")->where("id = ".$isSet_plan['id'])->update($data);
                    $plan_id = $isSet_plan['id'];
                }
                //处理开票计划
                if($tmp !== false){
                    D("WrkInvoicePlan")->addModuleUserAccessData("WrkInvoicePlan",$plan_id,I("post.company_id"));
                    //处理已开票数据
                    if(I("post.invoice_money") != ""){
                        $this->invoiceAction($plan_id,$is_set_plan,$model);
                    }else{
                        if($is_set_plan) {
                            M("WrkInvoicePlan")->where("id = $plan_id")->setField("type",1);
                            $this->handlerInvoicePlan($plan_id,$model);
                        } else{
                            $this->addLog($plan_id);
                            $model->commit();
                            $this->ajaxReturn(array("error"=>0,"message"=>"操作成功！"));
                        }
                    }
                }else{
                    $this->ajaxReturn(array("error"=>1,"message"=>"操作失败！"));
                }
            }catch(\Think\Exception $ex){
                $model->rollback();
            }
        }else{
            $id = I("get.id");
            $result = M("WrkAgreement a")->where("a.id = $id")
                ->join("left join sys_branch b on a.company_id = b.id")
                ->join("left join wrk_invoice_plan c on a.id = c.agreement_id")
                ->join("left join sys_user user on c.leader_id = user.id")
                ->field("a.company_id as ag_company_id,a.agreement_sn as ag_agreement_sn,a.name as ag_name,a.agreement_money as ag_agreement_money,
            a.start_time as ag_start_time,a.finish_time as ag_finish_time,a.id as agreement_id,b.name as ag_customer_branch,
            c.attach_group,c.leader_id,c.visiblers,c.comments,c.collaborators,c.amount_paid,c.type as is_plan,c.is_sendWX,user.name,user.staff_name")->find();
            $result['ag_start_time'] = date("Y/m/d",$result['ag_start_time']);
            $result['ag_finish_time'] = date("Y/m/d",$result['ag_finish_time']);
            //创建开票计划时默认自己为负责人
            $leader = M("SysUser")->where("id = ".$this->_user_session->userId)->field("staff_name,name,id")->find();
            $result['leader_name'] = $leader['staff_name'] == "" ? $leader['name'] : $leader['staff_name'];
            $result['leader_id'] = $leader['id'];
            $this->assignPermissions();
            $this->assign("model",$result);
            $this->display("edit");
        }
    }

    //获取开票未开结余状态
    function getInvoiceStateAction(){
        $plan_id = I("post.plan_id");
        if($plan_id){
            $result = M("WrkInvoicePlan")->alias("a")->join("wrk_agreement as b on a.agreement_id = b.id")->where("a.id = $plan_id")->field("a.amount_paid,b.agreement_money,a.state")->find();
            $this->ajaxReturn($result);
        }
    }

    //处理开票计划
    public function handlerInvoicePlan($plan_id,$model){
        $dataList = array();
        $plan_day = I("post.plan_day");
        $plan_money = I("post.plan_money");
        $notify_day = I("post.notify_day");
        if($plan_day == ""){
            $this->ajaxReturn(array("error"=>1,"message"=>"请至少添加一条计划！"));
        }
        foreach ($plan_money as $k=>$v){
            if($v <= 0){
                $this->ajaxReturn(array("error"=>1,"message"=>"请输入正确的金额！"));
            }
        }
        $is_notify = explode(",",I("post.is_notifys"));
        $is_invoice = explode(",",I("post.is_invoices"));
        $ids = I("post.ids");
        if($ids != ""){
            $condition['id'] = array("not in",array_filter($ids));
            //$condition['state'] = array(array("neq",1),array("neq",2));
        }
        $condition['plan_id'] = $plan_id;
        $condition['branch_id'] = $this->_user_session->currBranchId;
        M("WrkInvoicePlanDetail")->where($condition)->delete();
        $tmp = array();
        foreach ($plan_money as $k=>$v){
            $tmp['id'] = $ids[$k];
            $tmp["plan_day"] = strtotime($plan_day[$k]);
            $tmp["plan_money"] = $v;
            $tmp["notify_day"] = strtotime($notify_day[$k]);
            $tmp["is_notify"] = $is_notify[$k];
            $tmp["is_invoice"] = $is_invoice[$k];
            $tmp['plan_id'] = $plan_id;
            $tmp['branch_id'] = $this->_user_session->currBranchId;
            if($tmp['id'] != ""){
                M("WrkInvoicePlanDetail")->where("id = ".$tmp['id'])->save($tmp);
                continue;
            }
            $dataList[] = $tmp;
        }
        $this->addLog($plan_id);
        //开票计划保存
        if($dataList){
            $result = M("WrkInvoicePlanDetail")->addAll($dataList);
            if($result !== false){
                //判断是否有已开票数据
                /*if(I("post.invoice_money") != ""){
                    //处理已开票数据
                    $this->invoiceAction($plan_id);
                }else{*/
                    $model->commit();
                    $this->ajaxReturn(array("error"=>0,"message"=>"操作成功！"));
               // }
            }else{
                $this->ajaxReturn(array("error"=>1,"message"=>"新增计划失败！"));
            }
        }else{
            $model->commit();
            $this->ajaxReturn(array("error"=>0,"message"=>"操作成功！"));
        }
    }

    //新增开票计划获取已开票数据
    public function getInvoicedAction(){
        $id = I("post.id");
        if($id){
            $record = M("WrkInvoicePlan a")->join("wrk_invoice_record b on a.id = b.plan_id")->where("a.agreement_id = $id")->field("b.*")->select();
            foreach ($record as $k=>$v){
                if($v['invoice_day']){
                    $record[$k]['invoice_day'] = date("Y/m/d");
                }
                $record[$k]['invoice_type'] = $v['invoice_type'] == 0 ? "普通发票":"增值税专用发票";
            }
            $this->ajaxReturn($record);
        }
    }
}