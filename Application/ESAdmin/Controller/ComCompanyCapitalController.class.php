<?php

namespace ESAdmin\Controller;

use Common\Lib\Controller\DataController;

class  ComCompanyCapitalController extends DataController {
    public function assignPermissions($controller = CONTROLLER_NAME)
    {
        parent::assignPermissions($controller); // TODO: Change the autogenerated stub
        $hasLeader = $this->getUserHasAccountLeader();
        $this->assign('has_leader',$hasLeader);
    }

    public function listAction()
    {
        $aj = D('ComAccountJurisdiction') ;
        $aj->setObjectType(1);
        $aj->setObjectId($this->_user_session->currBranchId);
        $aj->setObjectVarious([CAJ_BRANCH_CUSTOMER_CAPITAL]);
        $aj->getLoginUserHasCompanyVisiblers();
        $jurisdiction = $aj->getStore('jurisdiction');
        if ($jurisdiction == 'all' || is_array($jurisdiction) && in_array($this->_user_session->userId,$jurisdiction)) {
            $page_index = I("page/d", 1);
            $page_size = I("rows/d", 1024);
            $limit ='limit '. ($page_index - 1) * $page_size . ',' .  $page_size;
            $branch_id = $this->_user_session->parentBranchId;
            $id = $this->_user_session->currBranchId;
            //添加充值 提现 转账信息
            //转账至公司 退款
            $where1 = "fina.branch_id = ".$branch_id ."  and "." fina.fina_type in (".FIN_CIZ_WITHDRAW_FLOW_TO_COMPANY.",".FIN_USER_REFUND.") and fina.company_id = ".$id;
            //公司提现
            $where2 = "fina.branch_id = ".$branch_id ."  and "." fina.withdrawal_type in (".FIN_CIZ_WITHDRAW.")"." and fina.company_id = ".$id;
            //公司充值
            $where3 = "fina.branch_id = ".$branch_id ."  and "." fina.money_type in (".FIN_CIZ_RECHARGE.")"." and fina.company_id = ".$id;
            //余额缴费付款
            $where4 = "fina.branch_id = ".$branch_id ."  and "." fina.fina_type in (".FIN_PROMPT_BALANCE_PAY.",".FIN_RECEIVABLES_CONFIRMED.") and fina.company_id = ".$id;
            $sql = $this->getCompanyCapitalSql($where1,$where2,$where3,$where4);
            $alldata =  M()->query($sql);
            if (isset($_POST['mold'])) {
                if($_POST['mold'] == 1){//收入
                    switch ($_POST['income']) {
                        case '3'://转账
                            $where1 = "fina.branch_id = ".$branch_id ."  and "." fina.fina_type in (".FIN_CIZ_WITHDRAW_FLOW_TO_COMPANY.") and fina.company_id = ".$id;
                            $where2 = "fina.id = 0";$where3 = "fina.id = 0";$where4 = "fina.fina_id = 0";
                            break;
                        case '4'://退款
                            $where1 = "fina.branch_id = ".$branch_id ."  and "." fina.fina_type in (".FIN_USER_REFUND.") and fina.company_id = ".$id;
                            $where2 = "fina.id = 0";$where3 = "fina.id = 0";$where4 = "fina.fina_id = 0";
                            break;
                        case '5'://充值
                            $where1 = "fina.fina_id = 0";$where2 = "fina.id = 0";$where4 = "fina.fina_id = 0";
                            break;
                        default:
                            $where2 = "fina.id = 0";$where4 = "fina.fina_id = 0";
                            break;
                    }
                }elseif($_POST['mold'] == 2){//支出
                    switch ($_POST['pay']) {
                        case '1'://付款
                            $where1 = "fina.fina_id = 0";$where2 = "fina.id = 0";$where3 = "fina.id = 0";
                            break;
                        case '2'://提现
                            $where1 = "fina.fina_id = 0";$where3 = "fina.id = 0";$where4 = "fina.fina_id = 0";
                            break;
                        default:
                            $where1 = "fina.fina_id = 0";$where3 = "fina.id = 0";
                            break;
                    }
                }
            }
            //判断是不是可见人/负责人
            $sql = $this->getCompanyCapitalSql($where1,$where2,$where3,$where4);
            $list = M()->query($sql.$limit);
            //获取当前的公司账户的余额
            $account_data = M('SysBranch')->field('money,money_auditing') -> where('id = '.$id) ->find();
            $alldata_income = 0;
            $alldata_pay = 0;
            foreach($alldata as $key=>$value) {
                if ($value['state'] == 1 && $value['polarity'] == '+'){
                    $alldata_income = sprintf("%.2f",$alldata_income + $value['income_money']);
                } else if ($value['state'] == 1 && $value['polarity'] == '-'){
                    $alldata_pay = sprintf("%.2f",$alldata_pay + $value['pay_money']);
                }
                $alldata[$key]['actual_money'] = sprintf("%.2f",$alldata_income-$alldata_pay);
            }
            $all_data_ids = array_column($alldata,"id");
            foreach ($list as $key =>$value) {
                //$list[$key]['actual_money'] = $alldata[($page_index - 1) * $page_size + $key]['actual_money'];
                $list[$key]['actual_money'] = $alldata[array_search($value['id'],$all_data_ids)]['actual_money'];
                $list[$key]['state_view'] = $this->getCapitalDetailStateView($value);
                $list[$key]['attach_group'] = empty($value['attach_group']) ? '' : $value['attach_group'];
                $list[$key]['operation'] = $this->getCapitalDetailOperation($value);
                $list[$key]['income_money'] = $value['polarity'] == '+' ? sprintf("%.2f",$value['income_money']) : '';
                $list[$key]['pay_money'] = $value['polarity'] == '-' ? sprintf("%.2f",$value['pay_money']) : '';
                $list[$key]['created_time'] = date('Y/m/d H:i:s',$value['created_time']);
            }
            $result["total"] = count(M()->query($sql));
            $result["rows"] = $list;
            $result["tips"] = '暂无数据';
            $result["footer"] = [
                ['created_time' => '合计','income_money'=> $alldata_income,'pay_money'=>$alldata_pay,'actual_money'=>sprintf("%.2f",$account_data['money'])]
            ];
            header('Content-Type:application/json; charset=utf-8');
            exit(json_encode($result));
        } else {
            $result["total"] = 0;
            $result["rows"] = [];
            $result["tips"] = '你不是该公司的资金负责人或可见人，无查看权限';
            exit(json_encode($result));
        }
    }
    public function rechargeAction()
    {
        if (IS_GET) {
            $branch = M('sys_branch') -> where('id = '.$this->_user_session->currBranchId)->find();
            $store =  M('com_store')->where('branch_id = '.$this->_user_session->parentBranchId)->find();
            $branch['attach_group'] = genUniqidKey();
            $this->assign('model',$branch);
            $this->assign('store',$store);
            $this->display();
        } else {
            //判断是否有上传备注附件
            $condition['group'] = I('post.attach_group');
            $attachment = M('com_attachment') ->where($condition) ->find();
            if (!$attachment) {
                $this->ajaxReturn(array('error'=>1,'message' =>'请上传备注附件'));
                die;
            }
            $money = I('post.account', '', 'strip_tags');
            $payment = M('com_recharge');
            $orderid = getOrderNo("UIZ_");
            $money_type	=	FIN_CIZ_RECHARGE;
            $pay_name = "个人账户充值(线下转账)";
            $source = FIN_PAY_OFFLINE;
            $payment->attach_group =I('post.attach_group');
            $payment->user_id = $this->_user_session->userId;
            $payment->creator_id = $this->_user_session->userId;
            $payment->company_id = $this->_user_session->currBranchId;
            $payment->branch_id =  getBrowseBranchId();
            $payment->pay_status = 0;
            $payment->order_sn = $orderid;
            $payment->account = $money;
            $payment->ctime = time();
            $payment->pay_name = $pay_name;
            $payment->money_type = $money_type;
            $payment->source = $source;
            $result = $payment->add();
            if ($result) {
                $send_result = D("ComRecharge")->sendCapitalMsgToBranch('comrecharge',$this->_user_session->currBranchId,'company',$money);
                $msg = $send_result['errcode'] == 0 ? '充值申请提交成功':'充值申请提交成功,模板通知发送失败';
                $this->ajaxReturn(array('error'=>0,'message' =>$msg));
            } else {
                $this->ajaxReturn(array('error'=>1,'message' =>'充值失败'));
            }
        }
    }
    public function withdrawalAction()
    {
        $user = M('sys_user')
            ->alias('user')
            ->field('user.*,bank.title,bank.id as bank_id,bank.picurl as bank_pic')
            ->join('left join sys_bank_ico as bank on bank.id = user.deposit')
            ->where('user.id = '.$this->_user_session->userId)
            ->find();
        $branch = M('SysBranch') ->field('money,money_auditing')->where('id = '.$this->_user_session->currBranchId) ->find();
        if (IS_GET) {
            $model['title'] = $user['title'] ;
            $model['bank_id'] = $user['bank_id'] ;
            $model['bank_pic'] = $user['bank_pic'] ;
            $model['bank_account'] = $user['bank_account'] ? '尾号'.substr($user['bank_account'],-4) : '';
            $model['workability_money'] = sprintf('%.2f',$branch['money'] - $branch['money_auditing']);
            $store =  M('com_store')->where('branch_id = '.$this->_user_session->parentBranchId)->find();
            $this->assign('model',$model);
            $this->assign('store',$store);
            $this->display();
        } else{
            $postdata = I('post.');
            if (empty($user['deposit']) || empty($user['bank_account'])) {
                $this->ajaxReturn(array("error" => "1", "msg" => "基本账户信息未完善，请完善后再操作！", "url" => ""));
                exit();
            }
            if ($postdata['money'] < 100) {
                $this->ajaxReturn(array("error" => "1", "msg" => "提现金额不能低于100！", "url" => ""));
                exit();
            }
            if ($postdata['money'] > ($branch['money'] - $branch['money_auditing'])) {
                $this->ajaxReturn(array("error" => "1", "msg" => "账户余额不足！", "url" => ""));
                exit();
            }
            $data = $postdata;
            $data['user_id'] = $this->_user_session->userId;
            $data['company_id'] = $this->_user_session->currBranchId;
            $data['order_sn'] = getOrderNo("CIW_");
            $data['create_time'] = time();
            $data['deposit'] = $user['title'];
            $data['handle_type'] = '线下转账';
            $data['bank_account'] =  $user['bank_account'];
            $data['branch_id'] = getBrowseBranchId();
            $data['real_money'] = $postdata['money'];
            $data['fee'] = 0;
            $data["cardholder"] = $user['real_name'];
            $data['status'] =  0;
            $data["withdrawal_type"] = FIN_CIZ_WITHDRAW; //业务提现
            $data['bank_address'] = $user['bank_address'];
            $withdrawals_table = M('com_withdrawals');
            try {
                $withdrawals_table->startTrans();
                $last_id = $withdrawals_table->data($data)->add();
                $money_data['money_auditing'] = $postdata['money'] + $branch['money_auditing'];
                M('SysBranch')->data($money_data)->where(array('id' => $this->_user_session->currBranchId))->save();
                $withdrawals_table->commit();
                $send_result = D("ComRecharge")->sendCapitalMsgToBranch('ComWithdrawal',$data['company_id'],'company',$postdata['money']);
                $msg = '提现到账时间，以银行实际到账时间为准，一般为T+3个工作日内，请注意查询银行账户。';
                $msg .= $send_result['errcode'] == 0 ? '':'模板通知发送失败';
                $this->ajaxReturn(array("error" => "0", "message" => $msg));
            } catch (\Exception $e) {
                $withdrawals_table->rollback();
                $this->ajaxReturn(array("error" => "1", "message" => "提交错误，请联系客服人员。"));
            }
        }
    }
    public function bankAction()
    {
        if (IS_GET){
            $bank_table = M('sys_bank_ico');
            $banks = $bank_table->cache(true)->select();
            $this->assign('banks', $banks);
            $user = M('sys_user')->alias("user")->join("left join sys_bank_ico bank on bank.id=user.deposit")
                ->field("user.*,bank.title")->where(array('user.id' => $this->_user_session->userId))->find();
            $this->assign('model', $user);
            $this->display();
        } else {
            $data = I('post.');
            if (empty($data['code'])) {
                die(json_encode(array("error" => "1", "message" => "请输入手机验证码!")));
            }
            if ($data['code'] == $_SESSION['regcode']) {
                $data['updated_at'] = time();
                $result = M('SysUser')->data($data)->where(array('id' => $this->_user_session->userId))->save();
                if ($result){
                    $bank = M('sys_bank_ico')->where(array('id' => $data['deposit']))->find();
                    die(json_encode(array("error" => "0", "message" => "银行卡绑定成功!","result"=>$bank)));
                } else {
                    die(json_encode(array("error" => "1", "message" => "银行卡绑定失败!")));
                }
            } else {
                die(json_encode(array("error" => "1", "message" => "手机验证码错误!")));
            }
        }
    }
    public function WxNativePayAction()
    {
        if (IS_POST) {
            $orderid = getOrderNo("CIZ_");
            $payment_money = I('post.price');
            Vendor("WxPay.WxPayApi");
            Vendor("WxPay.WxPayNative");
            Vendor("WxPay.WxPayNotify");
            Vendor("phpqrcode.phpqrcode");
            Vendor("WxPay.log");
            $notify = new \NativePay();
            $input = new \WxPayUnifiedOrder();
            setPayParams($input);
            $input->SetBody("扫码支付");
            $input->SetAttach("充值");
            $input->SetOut_trade_no($orderid);
            $input->SetTotal_fee($payment_money * 100);
            $input->SetTime_start(date("YmdHis"));
            $input->SetTime_expire(date("YmdHis", time() + 600));
            $input->SetGoods_tag("");
            $input->SetNotify_url(WEB_ROOT . "/WeChatPay/rechargePayNotify/branch_id/".getBrowseBranchId());
            $input->SetTrade_type("NATIVE");
            $input->SetProduct_id($this->_user_session->currBranchId);
            $result = $notify->GetPayUrl($input);
            ob_start();
            \QRcode::png($result["code_url"],false,0,6);
//            \QRcode::png('www.54lynn.cn',false,0,6);
            $imagerStr = base64_encode(ob_get_contents());
            ob_end_clean();
            S('FILE_WxCodePay_'.$orderid,array(
                'type'=>'file',
                'object_type'=> 1,
                'account' =>$payment_money,
                'creator_id'=>$this->_user_session->userId,
                'object_id'=>$this->_user_session->currBranchId,
                'branch_id'=>$this->_user_session->parentBranchId,
            ),array('type'=>'file','expire'=>1800));
            if (IS_POST){
                $this->ajaxReturn(array('error'=>0,'code'=>$imagerStr,'no'=>$orderid));
            }else{
                $this->code_img = $imagerStr;
            };
        }
    }
    public function hasWXRechargeAction()
    {
        if (IS_POST) {
            $order_sn = I('post.sn');
            $recharge = M('com_recharge') ->where('order_sn = \''.$order_sn.'\'')->find();
            if ($recharge) {
                $this->ajaxReturn(array('error'=>0,'message' =>'微信支付成功!'));
            } else {
                $this->ajaxReturn(array('error'=>1));
            }
        }
    }
    protected function getCapitalDetailStateView($capital)
    {
        $capital_entity_library = [
            '提现' => ['提现中','提现成功','提现失败'],
            '微信充值' => ['充值失败','充值成功','充值失败'],
            '线下充值' => ['充值中','充值成功','充值失败'],
            '转账' => ['转账中','已转账','转账失败'],
            '佣金' => ['未解冻','已解冻','解冻失败'],
            '退款' => ['退款中','已退款','退款失败'],
            '付款' => ['付款中','已付','付款失败']
        ];
        return $capital['polarity'] === '+' ?
            $capital_entity_library[$capital['income_type']][$capital['state']] :
            $capital_entity_library[$capital['pay_type']][$capital['state']];
    }
    protected function getCapitalDetailOperation($capital)
    {
        if ($capital['polarity'] === '+' && ($capital['income_type'] ==='线下充值' || $capital['income_type'] ==='微信充值')){
            return 'ComRecharge';
        } elseif ($capital['polarity'] === '-' && $capital['pay_type'] ==='提现') {
            return 'ComWithdrawals';
        } else {
            return 'ComFinance';
        }
    }
    protected function getUserHasAccountLeader()
    {
        $jurisdiction =  D('ComAccountJurisdiction');
        $jurisdiction->setObjectType(1);
        $jurisdiction->setObjectId($this->_user_session->currBranchId);
        $jurisdiction->setObjectVarious([CAJ_BRANCH_CUSTOMER_CAPITAL]);
        $jurisdiction->handlerHasCompanyLeader();
        return $jurisdiction->getStore('has_leader');
    }

    public function getCompanyCapitalSql($where1,$where2,$where3,$where4){
        $list_sql1 = D('ComFinance')
            ->alias('fina')
            ->field("fina.fina_id as id,fina.fina_time as created_time,fina.fina_cash as income_money,'' as pay_money,'收入' as detail_type,(case fina.fina_type when ".FIN_USER_REFUND." then '退款' when ".FIN_CIZ_WITHDRAW_FLOW_TO_COMPANY." then '转账' else '充值' end)  as income_type,'' as pay_type,'1' as state,fina.fina_type as money_type,'+' as polarity,fina.attach_group")
            ->where($where1)
            ->fetchSql(true)->select();
        $list_sql2 = D('ComWithdrawals')
            ->alias('fina')
            ->field("fina.id,fina.create_time as created_time,'' as income_money,fina.money as pay_money,'支出' as detail_type,'' as income_type,'提现' as pay_type,fina.status as state,fina.withdrawal_type as money_type,'-' as polarity,fina.attach_group")
            ->where($where2)
            ->fetchSql(true)->select();
        $list_sql3 = D('ComRecharge')
            ->alias('fina')
            ->field("fina.id,fina.ctime as created_time,fina.account as income_money,'' as pay_money,'收入' as detail_type,if(fina.source = 0,'微信充值','线下充值') as income_type,'' as pay_type,fina.pay_status as state,fina.money_type as money_type,'+' as polarity,fina.attach_group")
            ->where($where3)
            ->fetchSql(true)->select();
        $list_sql4 = D('ComFinance')
            ->alias('fina')
            ->field("fina.fina_id as id,fina.fina_time as created_time,'' as income_money,fina.fina_cash as pay_money,'支出' as detail_type,''  as income_type,'付款' as pay_type,'1' as state,fina.fina_type as money_type,'-' as polarity,fina.attach_group")
            ->where($where4)
            ->group("order_sn")
            ->fetchSql(true)->select();
        $sql = '( '.$list_sql1 . ') union ('.$list_sql2.') union ('.$list_sql3.') union ('.$list_sql4.') order by created_time asc ';
        return $sql;
    }
}