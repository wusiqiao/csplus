<?php

namespace ESAdmin\Controller;

use Common\Lib\Controller\DataController;

class ComIterationMessageController extends DataController{
    protected $isWrite = false;
    public function addAction(){
        if(!$this->isAdmin){
            exit('不是系统管理员禁止操作!');
        }

        parent::addAction(); // TODO: Change the autogenerated stub
    }

    protected function _before_write($type, &$data){
        parent::_before_write($type, $data);
        $data['update_time'] = time();
        $data['updater_id'] = $this->_user_session->userId;
        if ($type == 1) {
            $data['create_time'] = time();
            $data['branch_id'] = getbrowsebranchid();
            $data['creater_id'] = $this->_user_session->userId;
        }
        if ($data['status'] == 1) {
            $this->isWrite = true;
            $data['send_time'] = time();
        }
    }

    protected function _before_detail(&$data){
       if($this->isWrite && $data['status'] == 1){
           $this->notice($data);
       }
    }

    public function sendMessageAction($id){
        $bool = M('ComIterationMessage')
            ->where(['id' => $id])
            ->save(['status' => 1, 'send_time' => time()]);

        if(!$bool){
            return $this->ajaxReturn(array('code' => 1, 'message' => '发送失败!'));
        }

        $this->isWrite = true;
        $this->_getDetailData($id);
        $this->ajaxReturn(array('code' => 0, 'message' => '发送成功'));
    }

    private function notice($data = null){
        $total = S('ComIterationMessageTotal');
        if(!$total && $total !== 0){
            $total = M('ComIterationMessage')->where(['status' => 1])->count();
        }else{
            $total += 1;
        }

        S('ComIterationMessageTotal', $total);

        $key = 'ComIterationMessageTotal' . $data['type'];
        $total = S($key);
        if(!$total && $total !== 0){
            $total = M('ComIterationMessage')->where(['status' => 1, 'type' => $data['type']])->count();
        }else{
            $total += 1;
        }

        S($key, $total);

        $client = new \swoole_client(SWOOLE_SOCK_TCP);
        if(!$client->connect('120.26.97.87', 19999, -1)){
            return;
        }

        $client->send("hello world");
        echo $client->recv();
        $client->close();
    }
}

?>