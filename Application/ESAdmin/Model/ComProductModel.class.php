<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/6
 * Time: 11:59
 */
namespace ESAdmin\Model;

use Common\Lib\Model\DataModel;
use Think\Exception;

class ComProductModel extends DataModel {
    protected $_link = array(
        "Company" => array(
            "join_name" => "LEFT",
            'class_name' => "SysBranch",
            'foreign_key' => 'branch_id',
            'mapping_name' => 'company',
            'mapping_fields' => 'name',
            "mapping_key" => "id"
        )
    );
    protected function _after_insert($data, $options)
    {
        parent::_after_insert($data, $options); // TODO: Change the autogenerated stub
        $this->HandlerProductOptions($data);
    }
    protected function _after_update($data, $options)
    {
        parent::_after_update($data, $options); // TODO: Change the autogenerated stub
        $options = M('ComProductOptions')->where('product_id = '.$data['id'])->select();
        if($options){
            $this->HandlerProductOptionsSave($data);
        }else{
            $this->HandlerProductOptions($data);
        }

    }
    public function getProductBuySingle($product_id){
        $single = M('ComProduct')->field('order_count,state')->where('id = '.$product_id)->find();
        return $single;
    }
    protected function htmlJsonDecode($str){
        return json_decode(htmlspecialchars_decode($str));
    }
    protected function _before_delete($options)
    {
        parent::_before_delete($options); // TODO: Change the autogenerated stub
        $options['where']['order_count'] = array('gt',0);
        $result = M('ComProduct')->where($options['where'])->getField('id',true);
        if($result){
            E('服务生成订单后,不能删除!');
            return false;
        }
    }

    protected function HandlerProductOptions($data){
        $branch_id          = $data['branch_id'] ?$data['branch_id'] : getBrowseBranchId();
        $add_options        = array();
        $product_attributes = I('post.product_attribute');
        $product_options    = I('post.product_options');
        foreach($product_options as $key=>$val){
            $product_options[$key] =(array) $this->htmlJsonDecode($val);
        }
        foreach($product_attributes as $key=>$val){
            $product_attributes[$key] = $this->htmlJsonDecode($val);
        }
        foreach ($product_options as $key=>$val){
            $temp['created_at'] = time();
            $temp['updated_at'] = time();
            $temp['name']      = $val['title'];
            $temp['parent_id'] = 0;
            $temp['branch_id'] = $branch_id;
            $temp['product_id']= $data['id'];
            $temp['sort'] = $key;
            $cpo_id = M('ComProductOptions')->add($temp);
            $childrens         = explode('&|',$val['children']);
            foreach ($childrens as $k =>$v){
                $temp['sort'] = $k;
                $temp['name']  = $v;
                $temp['parent_id']  = $cpo_id;
                $add_options[] = $temp;
            }
        }
        M('ComProductOptions')->addAll($add_options);
        $now_list = M('ComProductOptions')->field('name,parent_id,id')->where('branch_id = '.$branch_id.' and product_id = '.$data['id'])->select();
        $nows_id    = array();
        $nows_name  = array();
        foreach ($now_list as $key=>$val){
            $nows_id[$val['id']] = $val;
        }
        foreach ($now_list as $key=>$val){
            if($val['parent_id'] > 0){
                $nows_name[$nows_id[$val['parent_id']]['name']][$val['name']] =$val;
            }
        }
        $add_attributes['is_open'] = 1;
        $add_attributes['product_id'] = $data['id'];
        $add_attributes['branch_id'] = $branch_id;
        $add_attributes['created_at'] = time();
        $add_attributes['updated_at'] = time();
        $add_attributes_all = array();
        foreach($product_attributes as $key=>$val){
            $temp = array();
            foreach ($val as $k=>$v){
                if($v[0] == 'discount'){
                    $add_attributes['real_cash'] = (float) $v[1];
                }elseif($v[0] == 'origina'){
                    $add_attributes['original_cash'] = (float) $v[1];
                }else{
                    $temp[] = $nows_name[$v[0]][$v[1]]['id'];
                }
            }
            sort($temp);
            $add_attributes['value'] = implode(',',$temp);
            $add_attributes_all[] = $add_attributes;
        }
        M('ComOrderAttribute')->addAll($add_attributes_all);
    }
    public function getAttribute($data){
        $where = is_array($data) ? 'id = '.$data['attribute']: 'id = '.$data;
        $topics_case = M('ComOrderAttribute')->field('id,real_cash,original_cash,value')->where($where)->find();
        if($topics_case){
            //获取
            $options['id'] = array('in',$topics_case['value']);
            $result = M('ComProductOptions')->where($options)->distinct(true)->getField('name',true);
            $topics_case['tips'] = $result;
        }
        return $topics_case;
    }
    protected function HandlerProductOptionsSave($data){
        $product_attributes = I('post.product_attribute');
        $product_options    = I('post.product_options');
        $branch_id          = $data['branch_id'] ?$data['branch_id'] : getBrowseBranchId();
        foreach($product_options as $key=>$val){
            $product_options[$key] =(array) $this->htmlJsonDecode($val);
        }
        foreach($product_attributes as $key=>$val){
            $product_attributes[$key] = $this->htmlJsonDecode($val);
        }
        //获取之前的options
        $options_old = M('ComProductOptions')->where('product_id = '.$data['id'])->select();
        $options_post= [];
        $options_old_analysis = [];
        $options_old_analysis_name = [];
        $options_old_main_name = [];
        $options_old_ids = [];
        foreach ($product_options as $key=>$val){
            $options_post[$val['title']]['children'] =explode('&|',$val['children']);
            $options_post[$val['title']]['sort'] = $key;
        }
        foreach ($options_old as $key=>$val){
            if($val['parent_id'] == 0){
                $options_old_analysis[$val['id']] = $val;
                $options_old_analysis_name[$val['name']] = $val;
                $options_old_main_name[] = $val['name'];
            }else{
                $options_old_analysis[$val['parent_id']]['children'][] = $val;
            }
            $options_old_ids[] = $val['id'];
        }

        $options_coe = [];//上传的id
        $options_add = [];//批量增加数据
        $add_options = [];//sql
        foreach ($options_old_analysis as $k=>$v){
            $old_name_all = [];
            if($options_post[$v['name']]){
                $options_coe[] = $v['id'];
                foreach($v['children'] as $ck => $cv){
                    if(in_array($cv['name'],$options_post[$v['name']]['children'])){
                        $options_coe[] = $cv['id'];
                    }
                    $old_name_all[] = $cv['name'];
                }
                foreach($options_post[$v['name']]['children'] as $ck => $cv){
                    if(!in_array($cv,$old_name_all)) {
                        $options_add[] = [
                            'title' => $v['name'],
                            'parent_id' => $v['id'],
                            'children' => $cv
                        ];
                    }
                }
            }
        }
        $options_add_mian = [];
        $options_dont_save = [];
        foreach($options_post as $key=>$val){
            if(!in_array($key,$options_old_main_name)){
                $options_add_mian[] = [
                    'title'=>$key,
                    'sort' => $val['sort'],
                    'children'=>$val['children']
                ];
            }else{
                $options_dont_save[] = ['id'=> $options_old_analysis_name[$key]['id'],'sort'=>$val['sort']];
            }
        }
        //删除
        $options_diff = array_diff($options_old_ids,$options_coe);
        if($options_diff){
            $diff_dete['product_id'] = $data['id'];
            $diff_dete['id']         = array('in',$options_diff);
            M('ComProductOptions')->where($diff_dete)->delete();
        }
        //新增
        if($options_add_mian){
            foreach ($options_add_mian as $key=>$val){
                $temp['created_at'] = time();
                $temp['updated_at'] = time();
                $temp['name']      = $val['title'];
                $temp['parent_id'] = 0;
                $temp['branch_id'] = $branch_id;
                $temp['product_id']= $data['id'];
                $temp['sort'] = $val['sort'];
                $cpo_id = M('ComProductOptions')->add($temp);
                $childrens         = $val['children'];
                foreach ($childrens as $k =>$v){
                    $temp['sort'] = $k;
                    $temp['name']  = $v;
                    $temp['parent_id']  = $cpo_id;
                    $add_options[] = $temp;
                }
            }
            M('ComProductOptions')->addAll($add_options);
        }
        if($options_add){
            $add_children_options = [];
            foreach ($options_add as $key=>$val){
                $temp['created_at'] = time();
                $temp['updated_at'] = time();
                $temp['name']      = $val['title'];
                $temp['parent_id'] = $val['parent_id'];
                $temp['branch_id'] = $branch_id;
                $temp['product_id']= $data['id'];
                $temp['sort'] = $key;
                $temp['name']      = $val['children'];
                    $add_children_options[] = $temp;
            }
            if($add_children_options){
                M('ComProductOptions')->addAll($add_children_options);
            }
        }
        //处理选定价格
        $now_list = M('ComProductOptions')->field('name,parent_id,id')->where('branch_id = '.$branch_id.' and product_id = '.$data['id'])->select();
        $attrs_nows = M('ComOrderAttribute')->where('branch_id = '.$branch_id.' and product_id = '.$data['id'])->select();
        $nows_id    = array();//提交的以ID为key的列表
        $nows_name  = array();//提交的以Value为key的列表
        $nows_arr  = array();//提交的Value列表
        $attrs_add  = array();//但列表增加数据
        $attrs_add_all = array();//批量增加
        $attrs_save = array();//修改列表
        $attrs_del  = array();//删除列表
        foreach ($now_list as $key=>$val){
            $nows_id[$val['id']] = $val;
        }
        foreach ($now_list as $key=>$val){
            if($val['parent_id'] > 0){
                $nows_name[$nows_id[$val['parent_id']]['name']][$val['name']] =$val;
            }
        }
        foreach($product_attributes as $key=>$val){
            $temp = array();
            foreach ($val as $k=>$v){
                if($v[0] == 'discount'){
                    $add_attributes['real_cash'] = (float) $v[1];
                }elseif($v[0] == 'origina'){
                    $add_attributes['original_cash'] = (float) $v[1];
                }else{
                    $temp[] = $nows_name[$v[0]][$v[1]]['id'];
                }
            }
            sort($temp);
            $add_attributes['value'] = implode(',',$temp);
            $nows_arr[] = implode(',',$temp);
            $add_attributes_all[implode(',',$temp)] = $add_attributes;
        }
        $attrs_old_names = []; //属性Value列表 old
        //获取需要修改数据和删除数据
        foreach ($attrs_nows as $key => $val){
            if(!in_array($val['value'],$nows_arr)){
                $attrs_del[] = $val['id'];
            }else{
                if($add_attributes_all[$val['value']]['real_cash'] != $val['real_cash'] || $add_attributes_all[$val['value']]['original_cash'] != $val['original_cash']){
                    $add_attributes_all[$val['value']]['id'] = $val['id'];
                    $add_attributes_all[$val['value']]['created_at'] = time();
                    $attrs_save[] = $add_attributes_all[$val['value']];
                }
                $attrs_old_names[] = $val['value'];
            }
        }
        //获取需要添加数据
        foreach ($nows_arr as $key=>$val){
            if(!in_array($val,$attrs_old_names)){
                $attrs_add  = $add_attributes_all[$val];
                $attrs_add['is_open'] = 1;
                $attrs_add['product_id'] = $data['id'];
                $attrs_add['branch_id']  = $branch_id;
                $attrs_add['created_at'] = time();
                $attrs_add['updated_at'] = time();
                $attrs_add_all[] = $attrs_add;
            }
        }
        //添加操作
        if($attrs_add_all){
            M('ComOrderAttribute')->addAll($attrs_add_all);
        }
        //修改操作
        if($attrs_save){
            foreach ($attrs_save as $key=>$val){
                M('ComOrderAttribute')->save($val);
            }
        }
        //删除操作
        if($attrs_del){
            $diff_dete['product_id'] = $data['id'];
            $diff_dete['id']         = array('in',$attrs_del);
            M('ComOrderAttribute')->where($diff_dete)->delete();
        }
        //sort 修改
        if($options_dont_save){
            foreach($options_dont_save as $key => $val){
                $temp_dont_save['sort'] = $val['sort'];
                $temp_dont_save['id'] = $val['id'];
                M('ComProductOptions')->save($temp_dont_save);
            }
        }
    }
}