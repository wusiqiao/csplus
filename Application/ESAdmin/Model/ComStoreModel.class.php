<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/3/6
 * Time: 11:59
 */
namespace ESAdmin\Model;

use Common\Lib\Model\BillModel;

class ComStoreModel extends BillModel {
    protected $_children = array("Case");
//    protected $_children_parent_id_key = "branch_id";
    /*获取城市列表*/
    public function getCityTreeList($cid) {
        $filed = $this->getOpenList($cid);
        $region_list = M('SysRegion')->field($filed)->cache(true)->order("level asc,sort desc")->select();
        $region = list_to_tree($region_list);
        return $region;
    }

    protected function getOpenList($cid){
        if(!($cid > 0)){
            $field  = "id,name as text,id,parent_id,if(level = 3,'open','closed' ) as state";
            return $field;
        }
       $check = M('SysRegion')->where('id = '.$cid)->find();
       if($check['parent_id'] == 0) {
           $field  = "id,name as text,id,parent_id,if(level = 3,'open','closed' ) as state";
       }else{
           $check_parent = M('SysRegion')->where('id = '.$check['parent_id'])->Find();
           $field  = "id,name as text,id,parent_id,(case when level = 3 then 'open' when id = ".$check_parent['id']." then 'open' ";
           if($check_parent['parent_id'] > 0) {
               $field .= " when id = ".$check_parent['parent_id']." then 'open'";
           }
           $field .= " else 'closed' end) as state";
       }
       return $field;
    }

    //获取地区信息
    public function SetSaveRegion(&$data){
       $theRegion    =  M('SysRegion')->where("id = ".$data['store_city'])->find();
       $theRegion_p  =  M('SysRegion')->where("id = ".$theRegion['parent_id'])->find();
       if($theRegion['level'] == 3){
           $data['province'] = $theRegion_p['parent_id'];
           $data['city']     = $theRegion['parent_id'];
           $data['district'] = $theRegion['id'];
       }else{
           $data['province'] = $theRegion_p['id'];
           $data['city']     = $theRegion['id'];
           $data['district'] = '';
       }
    }

    //新增或修改保存前调用，设置子表数据
     protected function _before_write_child($master_data, &$child_data, $child_name){  
         if ($this->getUpdateState() == self::MODEL_INSERT){ //修改时候不会修改branch_id
            $child_data["branch_id"] = $master_data["branch_id"];
         }
     }


    protected function _before_insert(&$data, $options)
    {
        parent::_before_insert($data, $options); // TODO: Change the autogenerated stub
        if($data['tool_manager']){
            $data['tool_manager'] = count($data['tool_manager']) == count($this->toolList()) ? 'all' : implode(',',$data['tool_manager'] );
        }else{
            $data['tool_manager'] = '';
        }
    }
    protected function _before_update(&$data, $options)
    {
        parent::_before_update($data, $options); // TODO: Change the autogenerated stub
        if($data['tool_manager']){
            $data['tool_manager'] = count($data['tool_manager']) == count($this->toolList()) ? 'all' : implode(',',$data['tool_manager'] );
        }else{
            $data['tool_manager'] = '';
        }
    }
    public function toolList(){
        return array(
            'nuclear' => '免费核名',
            'trademarks' => '商标查询',
            'files' => '免费合同'
        );
    }


}